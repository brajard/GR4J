
//----------------------------------------------------
// project: GR4J     header generated by YAO version v.9
//----------------------------------------------------

// DEFINE FOR PARALLELISM
#define NOT_PARALLEL

//¤ ¤ ¤ ¤ LES DECLARATIONS DE CLASS, DEFINE ET ALLOCATION DU PROJET
#define 	NT 	4008
#define 	SIZE 	40
#define 	Y3_M 	8
#define		YO_M1QN3
#define		YO_M2QN1
#define		YO_GRADTEST
#define		YO_VARINCR
#define		YDOUBLE 
#define		YTINY  1.e-15 
#define		YREAL double

#define		YNBUPTIME_Tpar  	0
#define		YNBSTEPTIME_Tpar	1
#define		YNBALLTIME_Tpar  	1
#define		YDt_Tpar 	YTabTraj[0].dtime
#define		Yid_Tpar 	0

#define		YNBUPTIME_Tm  	30
#define		YNBSTEPTIME_Tm	4008
#define		YNBALLTIME_Tm  	4038
#define		YDt_Tm 	YTabTraj[1].dtime
#define		Yid_Tm 	1

#define		YA1_Sm		1
#define		YDIM_Sm		1
#define		YNB_Sm		1
#define		Yid_Sm 	0

#define		YA1_Spar		1
#define		YDIM_Spar		1
#define		YNB_Spar		1
#define		Yid_Spar 	1

/*----------------- GENERATION OF MODULES... -------------*/

//~~~~~~~~~~~~~~~~~~~~~~~~~ module X1~~~~~~~~~~~~~~~~~~~~~~~~~
#define Yid_X1 0
#define YNBPTARGET_X1 0
#define YDEBTARGET_X1 0
#define YENDTARGET_X1 0
/*M1_VALST  */ #define 	 Ydelta_X1(v, i, t) 		 YX1[i]->Ydelta[t][v] 
/*M1_VALST  */ #define 	 YD_X1(v, i, t) 		 YX1[i]->Ydelta[t][v] 
/*M1_VALSIT */ #define 	 YD1_X1(i, t) 		 YX1[i]->Ydelta[t][0] 
/*M1_HERESIT*/ #define 	 YD1Y_X1 		 YX1[Yi]->Ydelta[YTemps][0] 

class YaoX1;
/*NBSMOD    */ #define 	 YNBS_X1 	 1
/*M1_IRMOD  */ #define 	 YX1(i) 	 YX1[i]
/*M1_NOWMOD */ #define 	 YX1Y 		 YX1[Yi]
/*M1_VALSG  */ #define 	 Ystate_X1(v, i) 		 YX1[i]->Ystate[v] 
/*M1_VALSG  */ #define 	 YS_X1(v, i) 		 YX1[i]->Ystate[v] 
/*M1_VALSGI */ #define 	 YS1_X1(i) 		 YX1[i]->Ystate[0] 
/*M1_HERESGI*/ #define 	 YS1Y_X1 		 YX1[Yi]->Ystate[0] 
/*M1_VALSG  */ #define 	 Ygrad_X1(v, i) 		 YX1[i]->Ygrad[v] 
/*M1_VALSG  */ #define 	 YG_X1(v, i) 		 YX1[i]->Ygrad[v] 
/*M1_VALSGI */ #define 	 YG1_X1(i) 		 YX1[i]->Ygrad[0] 
/*M1_HERESGI*/ #define 	 YG1Y_X1 		 YX1[Yi]->Ygrad[0] 
/*M1_VALSG  */ #define 	 Yepsi_X1(v, i) 		 YX1[i]->Yepsi[v] 
/*M1_VALSG  */ #define 	 YE_X1(v, i) 		 YX1[i]->Yepsi[v] 
/*M1_VALSGI */ #define 	 YE1_X1(i) 		 YX1[i]->Yepsi[0] 
YaoX1 		 *YX1[YA1_Spar];
/*M1_VALSG  */ #define 	 Ywish_X1(v, i) 		 YX1[i]->Ywish[v] 
/*M1_VALSG  */ #define 	 YW_X1(v, i) 		 YX1[i]->Ywish[v] 
/*M1_VALSGI */ #define 	 YW1_X1(i) 		 YX1[i]->Ywish[0] 
/*M1_HERESGI*/ #define 	 YW1Y_X1 		 YX1[Yi]->Ywish[0] 

//~~~~~~~~~~~~~~~~~~~~~~~~~ module X2~~~~~~~~~~~~~~~~~~~~~~~~~
#define Yid_X2 1
#define YNBPTARGET_X2 0
#define YDEBTARGET_X2 0
#define YENDTARGET_X2 0
/*M1_VALST  */ #define 	 Ydelta_X2(v, i, t) 		 YX2[i]->Ydelta[t][v] 
/*M1_VALST  */ #define 	 YD_X2(v, i, t) 		 YX2[i]->Ydelta[t][v] 
/*M1_VALSIT */ #define 	 YD1_X2(i, t) 		 YX2[i]->Ydelta[t][0] 
/*M1_HERESIT*/ #define 	 YD1Y_X2 		 YX2[Yi]->Ydelta[YTemps][0] 

class YaoX2;
/*NBSMOD    */ #define 	 YNBS_X2 	 1
/*M1_IRMOD  */ #define 	 YX2(i) 	 YX2[i]
/*M1_NOWMOD */ #define 	 YX2Y 		 YX2[Yi]
/*M1_VALSG  */ #define 	 Ystate_X2(v, i) 		 YX2[i]->Ystate[v] 
/*M1_VALSG  */ #define 	 YS_X2(v, i) 		 YX2[i]->Ystate[v] 
/*M1_VALSGI */ #define 	 YS1_X2(i) 		 YX2[i]->Ystate[0] 
/*M1_HERESGI*/ #define 	 YS1Y_X2 		 YX2[Yi]->Ystate[0] 
/*M1_VALSG  */ #define 	 Ygrad_X2(v, i) 		 YX2[i]->Ygrad[v] 
/*M1_VALSG  */ #define 	 YG_X2(v, i) 		 YX2[i]->Ygrad[v] 
/*M1_VALSGI */ #define 	 YG1_X2(i) 		 YX2[i]->Ygrad[0] 
/*M1_HERESGI*/ #define 	 YG1Y_X2 		 YX2[Yi]->Ygrad[0] 
/*M1_VALSG  */ #define 	 Yepsi_X2(v, i) 		 YX2[i]->Yepsi[v] 
/*M1_VALSG  */ #define 	 YE_X2(v, i) 		 YX2[i]->Yepsi[v] 
/*M1_VALSGI */ #define 	 YE1_X2(i) 		 YX2[i]->Yepsi[0] 
YaoX2 		 *YX2[YA1_Spar];
/*M1_VALSG  */ #define 	 Ywish_X2(v, i) 		 YX2[i]->Ywish[v] 
/*M1_VALSG  */ #define 	 YW_X2(v, i) 		 YX2[i]->Ywish[v] 
/*M1_VALSGI */ #define 	 YW1_X2(i) 		 YX2[i]->Ywish[0] 
/*M1_HERESGI*/ #define 	 YW1Y_X2 		 YX2[Yi]->Ywish[0] 

//~~~~~~~~~~~~~~~~~~~~~~~~~ module X3~~~~~~~~~~~~~~~~~~~~~~~~~
#define Yid_X3 2
#define YNBPTARGET_X3 0
#define YDEBTARGET_X3 0
#define YENDTARGET_X3 0
/*M1_VALST  */ #define 	 Ydelta_X3(v, i, t) 		 YX3[i]->Ydelta[t][v] 
/*M1_VALST  */ #define 	 YD_X3(v, i, t) 		 YX3[i]->Ydelta[t][v] 
/*M1_VALSIT */ #define 	 YD1_X3(i, t) 		 YX3[i]->Ydelta[t][0] 
/*M1_HERESIT*/ #define 	 YD1Y_X3 		 YX3[Yi]->Ydelta[YTemps][0] 

class YaoX3;
/*NBSMOD    */ #define 	 YNBS_X3 	 1
/*M1_IRMOD  */ #define 	 YX3(i) 	 YX3[i]
/*M1_NOWMOD */ #define 	 YX3Y 		 YX3[Yi]
/*M1_VALSG  */ #define 	 Ystate_X3(v, i) 		 YX3[i]->Ystate[v] 
/*M1_VALSG  */ #define 	 YS_X3(v, i) 		 YX3[i]->Ystate[v] 
/*M1_VALSGI */ #define 	 YS1_X3(i) 		 YX3[i]->Ystate[0] 
/*M1_HERESGI*/ #define 	 YS1Y_X3 		 YX3[Yi]->Ystate[0] 
/*M1_VALSG  */ #define 	 Ygrad_X3(v, i) 		 YX3[i]->Ygrad[v] 
/*M1_VALSG  */ #define 	 YG_X3(v, i) 		 YX3[i]->Ygrad[v] 
/*M1_VALSGI */ #define 	 YG1_X3(i) 		 YX3[i]->Ygrad[0] 
/*M1_HERESGI*/ #define 	 YG1Y_X3 		 YX3[Yi]->Ygrad[0] 
/*M1_VALSG  */ #define 	 Yepsi_X3(v, i) 		 YX3[i]->Yepsi[v] 
/*M1_VALSG  */ #define 	 YE_X3(v, i) 		 YX3[i]->Yepsi[v] 
/*M1_VALSGI */ #define 	 YE1_X3(i) 		 YX3[i]->Yepsi[0] 
YaoX3 		 *YX3[YA1_Spar];
/*M1_VALSG  */ #define 	 Ywish_X3(v, i) 		 YX3[i]->Ywish[v] 
/*M1_VALSG  */ #define 	 YW_X3(v, i) 		 YX3[i]->Ywish[v] 
/*M1_VALSGI */ #define 	 YW1_X3(i) 		 YX3[i]->Ywish[0] 
/*M1_HERESGI*/ #define 	 YW1Y_X3 		 YX3[Yi]->Ywish[0] 

//~~~~~~~~~~~~~~~~~~~~~~~~~ module X4~~~~~~~~~~~~~~~~~~~~~~~~~
#define Yid_X4 3
#define YNBPTARGET_X4 0
#define YDEBTARGET_X4 0
#define YENDTARGET_X4 0
/*M1_VALST  */ #define 	 Ydelta_X4(v, i, t) 		 YX4[i]->Ydelta[t][v] 
/*M1_VALST  */ #define 	 YD_X4(v, i, t) 		 YX4[i]->Ydelta[t][v] 
/*M1_VALSIT */ #define 	 YD1_X4(i, t) 		 YX4[i]->Ydelta[t][0] 
/*M1_HERESIT*/ #define 	 YD1Y_X4 		 YX4[Yi]->Ydelta[YTemps][0] 

class YaoX4;
/*NBSMOD    */ #define 	 YNBS_X4 	 1
/*M1_IRMOD  */ #define 	 YX4(i) 	 YX4[i]
/*M1_NOWMOD */ #define 	 YX4Y 		 YX4[Yi]
/*M1_VALSG  */ #define 	 Ystate_X4(v, i) 		 YX4[i]->Ystate[v] 
/*M1_VALSG  */ #define 	 YS_X4(v, i) 		 YX4[i]->Ystate[v] 
/*M1_VALSGI */ #define 	 YS1_X4(i) 		 YX4[i]->Ystate[0] 
/*M1_HERESGI*/ #define 	 YS1Y_X4 		 YX4[Yi]->Ystate[0] 
/*M1_VALSG  */ #define 	 Ygrad_X4(v, i) 		 YX4[i]->Ygrad[v] 
/*M1_VALSG  */ #define 	 YG_X4(v, i) 		 YX4[i]->Ygrad[v] 
/*M1_VALSGI */ #define 	 YG1_X4(i) 		 YX4[i]->Ygrad[0] 
/*M1_HERESGI*/ #define 	 YG1Y_X4 		 YX4[Yi]->Ygrad[0] 
/*M1_VALSG  */ #define 	 Yepsi_X4(v, i) 		 YX4[i]->Yepsi[v] 
/*M1_VALSG  */ #define 	 YE_X4(v, i) 		 YX4[i]->Yepsi[v] 
/*M1_VALSGI */ #define 	 YE1_X4(i) 		 YX4[i]->Yepsi[0] 
YaoX4 		 *YX4[YA1_Spar];
/*M1_VALSG  */ #define 	 Ywish_X4(v, i) 		 YX4[i]->Ywish[v] 
/*M1_VALSG  */ #define 	 YW_X4(v, i) 		 YX4[i]->Ywish[v] 
/*M1_VALSGI */ #define 	 YW1_X4(i) 		 YX4[i]->Ywish[0] 
/*M1_HERESGI*/ #define 	 YW1Y_X4 		 YX4[Yi]->Ywish[0] 

//~~~~~~~~~~~~~~~~~~~~~~~~~ module P~~~~~~~~~~~~~~~~~~~~~~~~~
#define Yid_P 4
/*M1_VALST  */ #define 	 Ydelta_P(v, i, t) 		 YP[i]->Ydelta[t][v] 
/*M1_VALST  */ #define 	 YD_P(v, i, t) 		 YP[i]->Ydelta[t][v] 
/*M1_VALSIT */ #define 	 YD1_P(i, t) 		 YP[i]->Ydelta[t][0] 
/*M1_HERESIT*/ #define 	 YD1Y_P 		 YP[Yi]->Ydelta[YTemps][0] 

class YaoP;
/*NBSMOD    */ #define 	 YNBS_P 	 1
/*M1_IRMOD  */ #define 	 YP(i) 	 YP[i]
/*M1_NOWMOD */ #define 	 YPY 		 YP[Yi]
/*M1_VALST  */ #define 	 Ystate_P(v, i, t) 		 YP[i]->Ystate[t][v] 
/*M1_VALST  */ #define 	 YS_P(v, i, t) 		 YP[i]->Ystate[t][v] 
/*M1_VALSIT */ #define 	 YS1_P(i, t) 		 YP[i]->Ystate[t][0] 
/*M1_HERESIT*/ #define 	 YS1Y_P 		 YP[Yi]->Ystate[YTemps][0] 
/*M1_VALST  */ #define 	 Ygrad_P(v, i, t) 		 YP[i]->Ygrad[t][v] 
/*M1_VALST  */ #define 	 YG_P(v, i, t) 		 YP[i]->Ygrad[t][v] 
/*M1_VALSIT */ #define 	 YG1_P(i, t) 		 YP[i]->Ygrad[t][0] 
/*M1_HERESIT*/ #define 	 YG1Y_P 		 YP[Yi]->Ygrad[YTemps][0] 
YaoP 		 *YP[YA1_Sm];

//~~~~~~~~~~~~~~~~~~~~~~~~~ module E~~~~~~~~~~~~~~~~~~~~~~~~~
#define Yid_E 5
/*M1_VALST  */ #define 	 Ydelta_E(v, i, t) 		 YE[i]->Ydelta[t][v] 
/*M1_VALST  */ #define 	 YD_E(v, i, t) 		 YE[i]->Ydelta[t][v] 
/*M1_VALSIT */ #define 	 YD1_E(i, t) 		 YE[i]->Ydelta[t][0] 
/*M1_HERESIT*/ #define 	 YD1Y_E 		 YE[Yi]->Ydelta[YTemps][0] 

class YaoE;
/*NBSMOD    */ #define 	 YNBS_E 	 1
/*M1_IRMOD  */ #define 	 YE(i) 	 YE[i]
/*M1_NOWMOD */ #define 	 YEY 		 YE[Yi]
/*M1_VALST  */ #define 	 Ystate_E(v, i, t) 		 YE[i]->Ystate[t][v] 
/*M1_VALST  */ #define 	 YS_E(v, i, t) 		 YE[i]->Ystate[t][v] 
/*M1_VALSIT */ #define 	 YS1_E(i, t) 		 YE[i]->Ystate[t][0] 
/*M1_HERESIT*/ #define 	 YS1Y_E 		 YE[Yi]->Ystate[YTemps][0] 
/*M1_VALST  */ #define 	 Ygrad_E(v, i, t) 		 YE[i]->Ygrad[t][v] 
/*M1_VALST  */ #define 	 YG_E(v, i, t) 		 YE[i]->Ygrad[t][v] 
/*M1_VALSIT */ #define 	 YG1_E(i, t) 		 YE[i]->Ygrad[t][0] 
/*M1_HERESIT*/ #define 	 YG1Y_E 		 YE[Yi]->Ygrad[YTemps][0] 
YaoE 		 *YE[YA1_Sm];

//~~~~~~~~~~~~~~~~~~~~~~~~~ module INTERC~~~~~~~~~~~~~~~~~~~~~~~~~
#define Yid_INTERC 6
/*M1_VALST  */ #define 	 Ydelta_INTERC(v, i, t) 		 YINTERC[i]->Ydelta[t][v] 
/*M1_VALST  */ #define 	 YD_INTERC(v, i, t) 		 YINTERC[i]->Ydelta[t][v] 
/*M1_VALSIT */ #define 	 YD1_INTERC(i, t) 		 YINTERC[i]->Ydelta[t][0] 
/*M1_VALSIT */ #define 	 YD2_INTERC(i, t) 		 YINTERC[i]->Ydelta[t][1] 
/*M1_HERESIT*/ #define 	 YD1Y_INTERC 		 YINTERC[Yi]->Ydelta[YTemps][0] 
/*M1_HERESIT*/ #define 	 YD2Y_INTERC 		 YINTERC[Yi]->Ydelta[YTemps][1] 

class YaoINTERC;
class INTERC;
/*NBSMOD    */ #define 	 YNBS_INTERC 	 2
/*NBIMOD    */ #define 	 YNBI_INTERC 	 2
/*M1_IRMOD  */ #define 	 YINTERC(i) 	 YINTERC[i]
/*M1_NOWMOD */ #define 	 YINTERCY 		 YINTERC[Yi]
/*M1_VALST  */ #define 	 Ystate_INTERC(v, i, t) 		 YINTERC[i]->Ystate[t][v] 
/*M1_VALST  */ #define 	 YS_INTERC(v, i, t) 		 YINTERC[i]->Ystate[t][v] 
/*M1_VALSIT */ #define 	 YS1_INTERC(i, t) 		 YINTERC[i]->Ystate[t][0] 
/*M1_HERESIT*/ #define 	 YS1Y_INTERC 		 YINTERC[Yi]->Ystate[YTemps][0] 
/*M1_VALSIT */ #define 	 YS2_INTERC(i, t) 		 YINTERC[i]->Ystate[t][1] 
/*M1_HERESIT*/ #define 	 YS2Y_INTERC 		 YINTERC[Yi]->Ystate[YTemps][1] 
/*M1_VALST  */ #define 	 Ygrad_INTERC(v, i, t) 		 YINTERC[i]->Ygrad[t][v] 
/*M1_VALST  */ #define 	 YG_INTERC(v, i, t) 		 YINTERC[i]->Ygrad[t][v] 
/*M1_VALSIT */ #define 	 YG1_INTERC(i, t) 		 YINTERC[i]->Ygrad[t][0] 
/*M1_HERESIT*/ #define 	 YG1Y_INTERC 		 YINTERC[Yi]->Ygrad[YTemps][0] 
/*M1_VALSIT */ #define 	 YG2_INTERC(i, t) 		 YINTERC[i]->Ygrad[t][1] 
/*M1_HERESIT*/ #define 	 YG2Y_INTERC 		 YINTERC[Yi]->Ygrad[YTemps][1] 
INTERC 		 *YINTERC[YA1_Sm];

//~~~~~~~~~~~~~~~~~~~~~~~~~ module SX1~~~~~~~~~~~~~~~~~~~~~~~~~
#define Yid_SX1 7
/*M1_VALST  */ #define 	 Ydelta_SX1(v, i, t) 		 YSX1[i]->Ydelta[t][v] 
/*M1_VALST  */ #define 	 YD_SX1(v, i, t) 		 YSX1[i]->Ydelta[t][v] 
/*M1_VALSIT */ #define 	 YD1_SX1(i, t) 		 YSX1[i]->Ydelta[t][0] 
/*M1_HERESIT*/ #define 	 YD1Y_SX1 		 YSX1[Yi]->Ydelta[YTemps][0] 

class YaoSX1;
class SX1;
/*NBSMOD    */ #define 	 YNBS_SX1 	 1
/*NBIMOD    */ #define 	 YNBI_SX1 	 2
/*M1_IRMOD  */ #define 	 YSX1(i) 	 YSX1[i]
/*M1_NOWMOD */ #define 	 YSX1Y 		 YSX1[Yi]
/*M1_VALST  */ #define 	 Ystate_SX1(v, i, t) 		 YSX1[i]->Ystate[t][v] 
/*M1_VALST  */ #define 	 YS_SX1(v, i, t) 		 YSX1[i]->Ystate[t][v] 
/*M1_VALSIT */ #define 	 YS1_SX1(i, t) 		 YSX1[i]->Ystate[t][0] 
/*M1_HERESIT*/ #define 	 YS1Y_SX1 		 YSX1[Yi]->Ystate[YTemps][0] 
/*M1_VALST  */ #define 	 Ygrad_SX1(v, i, t) 		 YSX1[i]->Ygrad[t][v] 
/*M1_VALST  */ #define 	 YG_SX1(v, i, t) 		 YSX1[i]->Ygrad[t][v] 
/*M1_VALSIT */ #define 	 YG1_SX1(i, t) 		 YSX1[i]->Ygrad[t][0] 
/*M1_HERESIT*/ #define 	 YG1Y_SX1 		 YSX1[Yi]->Ygrad[YTemps][0] 
SX1 		 *YSX1[YA1_Sm];

//~~~~~~~~~~~~~~~~~~~~~~~~~ module PNX1~~~~~~~~~~~~~~~~~~~~~~~~~
#define Yid_PNX1 8
/*M1_VALST  */ #define 	 Ydelta_PNX1(v, i, t) 		 YPNX1[i]->Ydelta[t][v] 
/*M1_VALST  */ #define 	 YD_PNX1(v, i, t) 		 YPNX1[i]->Ydelta[t][v] 
/*M1_VALSIT */ #define 	 YD1_PNX1(i, t) 		 YPNX1[i]->Ydelta[t][0] 
/*M1_HERESIT*/ #define 	 YD1Y_PNX1 		 YPNX1[Yi]->Ydelta[YTemps][0] 

class YaoPNX1;
class PNX1;
/*NBSMOD    */ #define 	 YNBS_PNX1 	 1
/*NBIMOD    */ #define 	 YNBI_PNX1 	 2
/*M1_IRMOD  */ #define 	 YPNX1(i) 	 YPNX1[i]
/*M1_NOWMOD */ #define 	 YPNX1Y 		 YPNX1[Yi]
/*M1_VALST  */ #define 	 Ystate_PNX1(v, i, t) 		 YPNX1[i]->Ystate[t][v] 
/*M1_VALST  */ #define 	 YS_PNX1(v, i, t) 		 YPNX1[i]->Ystate[t][v] 
/*M1_VALSIT */ #define 	 YS1_PNX1(i, t) 		 YPNX1[i]->Ystate[t][0] 
/*M1_HERESIT*/ #define 	 YS1Y_PNX1 		 YPNX1[Yi]->Ystate[YTemps][0] 
/*M1_VALST  */ #define 	 Ygrad_PNX1(v, i, t) 		 YPNX1[i]->Ygrad[t][v] 
/*M1_VALST  */ #define 	 YG_PNX1(v, i, t) 		 YPNX1[i]->Ygrad[t][v] 
/*M1_VALSIT */ #define 	 YG1_PNX1(i, t) 		 YPNX1[i]->Ygrad[t][0] 
/*M1_HERESIT*/ #define 	 YG1Y_PNX1 		 YPNX1[Yi]->Ygrad[YTemps][0] 
PNX1 		 *YPNX1[YA1_Sm];

//~~~~~~~~~~~~~~~~~~~~~~~~~ module ENX1~~~~~~~~~~~~~~~~~~~~~~~~~
#define Yid_ENX1 9
/*M1_VALST  */ #define 	 Ydelta_ENX1(v, i, t) 		 YENX1[i]->Ydelta[t][v] 
/*M1_VALST  */ #define 	 YD_ENX1(v, i, t) 		 YENX1[i]->Ydelta[t][v] 
/*M1_VALSIT */ #define 	 YD1_ENX1(i, t) 		 YENX1[i]->Ydelta[t][0] 
/*M1_HERESIT*/ #define 	 YD1Y_ENX1 		 YENX1[Yi]->Ydelta[YTemps][0] 

class YaoENX1;
class ENX1;
/*NBSMOD    */ #define 	 YNBS_ENX1 	 1
/*NBIMOD    */ #define 	 YNBI_ENX1 	 2
/*M1_IRMOD  */ #define 	 YENX1(i) 	 YENX1[i]
/*M1_NOWMOD */ #define 	 YENX1Y 		 YENX1[Yi]
/*M1_VALST  */ #define 	 Ystate_ENX1(v, i, t) 		 YENX1[i]->Ystate[t][v] 
/*M1_VALST  */ #define 	 YS_ENX1(v, i, t) 		 YENX1[i]->Ystate[t][v] 
/*M1_VALSIT */ #define 	 YS1_ENX1(i, t) 		 YENX1[i]->Ystate[t][0] 
/*M1_HERESIT*/ #define 	 YS1Y_ENX1 		 YENX1[Yi]->Ystate[YTemps][0] 
/*M1_VALST  */ #define 	 Ygrad_ENX1(v, i, t) 		 YENX1[i]->Ygrad[t][v] 
/*M1_VALST  */ #define 	 YG_ENX1(v, i, t) 		 YENX1[i]->Ygrad[t][v] 
/*M1_VALSIT */ #define 	 YG1_ENX1(i, t) 		 YENX1[i]->Ygrad[t][0] 
/*M1_HERESIT*/ #define 	 YG1Y_ENX1 		 YENX1[Yi]->Ygrad[YTemps][0] 
ENX1 		 *YENX1[YA1_Sm];

//~~~~~~~~~~~~~~~~~~~~~~~~~ module tanhPS~~~~~~~~~~~~~~~~~~~~~~~~~
#define Yid_tanhPS 10
/*M1_VALST  */ #define 	 Ydelta_tanhPS(v, i, t) 		 YtanhPS[i]->Ydelta[t][v] 
/*M1_VALST  */ #define 	 YD_tanhPS(v, i, t) 		 YtanhPS[i]->Ydelta[t][v] 
/*M1_VALSIT */ #define 	 YD1_tanhPS(i, t) 		 YtanhPS[i]->Ydelta[t][0] 
/*M1_HERESIT*/ #define 	 YD1Y_tanhPS 		 YtanhPS[Yi]->Ydelta[YTemps][0] 

class YaotanhPS;
class tanhPS;
/*NBSMOD    */ #define 	 YNBS_tanhPS 	 1
/*NBIMOD    */ #define 	 YNBI_tanhPS 	 1
/*M1_IRMOD  */ #define 	 YtanhPS(i) 	 YtanhPS[i]
/*M1_NOWMOD */ #define 	 YtanhPSY 		 YtanhPS[Yi]
/*M1_VALST  */ #define 	 Ystate_tanhPS(v, i, t) 		 YtanhPS[i]->Ystate[t][v] 
/*M1_VALST  */ #define 	 YS_tanhPS(v, i, t) 		 YtanhPS[i]->Ystate[t][v] 
/*M1_VALSIT */ #define 	 YS1_tanhPS(i, t) 		 YtanhPS[i]->Ystate[t][0] 
/*M1_HERESIT*/ #define 	 YS1Y_tanhPS 		 YtanhPS[Yi]->Ystate[YTemps][0] 
/*M1_VALST  */ #define 	 Ygrad_tanhPS(v, i, t) 		 YtanhPS[i]->Ygrad[t][v] 
/*M1_VALST  */ #define 	 YG_tanhPS(v, i, t) 		 YtanhPS[i]->Ygrad[t][v] 
/*M1_VALSIT */ #define 	 YG1_tanhPS(i, t) 		 YtanhPS[i]->Ygrad[t][0] 
/*M1_HERESIT*/ #define 	 YG1Y_tanhPS 		 YtanhPS[Yi]->Ygrad[YTemps][0] 
tanhPS 		 *YtanhPS[YA1_Sm];

//~~~~~~~~~~~~~~~~~~~~~~~~~ module tanhES~~~~~~~~~~~~~~~~~~~~~~~~~
#define Yid_tanhES 11
/*M1_VALST  */ #define 	 Ydelta_tanhES(v, i, t) 		 YtanhES[i]->Ydelta[t][v] 
/*M1_VALST  */ #define 	 YD_tanhES(v, i, t) 		 YtanhES[i]->Ydelta[t][v] 
/*M1_VALSIT */ #define 	 YD1_tanhES(i, t) 		 YtanhES[i]->Ydelta[t][0] 
/*M1_HERESIT*/ #define 	 YD1Y_tanhES 		 YtanhES[Yi]->Ydelta[YTemps][0] 

class YaotanhES;
class tanhES;
/*NBSMOD    */ #define 	 YNBS_tanhES 	 1
/*NBIMOD    */ #define 	 YNBI_tanhES 	 1
/*M1_IRMOD  */ #define 	 YtanhES(i) 	 YtanhES[i]
/*M1_NOWMOD */ #define 	 YtanhESY 		 YtanhES[Yi]
/*M1_VALST  */ #define 	 Ystate_tanhES(v, i, t) 		 YtanhES[i]->Ystate[t][v] 
/*M1_VALST  */ #define 	 YS_tanhES(v, i, t) 		 YtanhES[i]->Ystate[t][v] 
/*M1_VALSIT */ #define 	 YS1_tanhES(i, t) 		 YtanhES[i]->Ystate[t][0] 
/*M1_HERESIT*/ #define 	 YS1Y_tanhES 		 YtanhES[Yi]->Ystate[YTemps][0] 
/*M1_VALST  */ #define 	 Ygrad_tanhES(v, i, t) 		 YtanhES[i]->Ygrad[t][v] 
/*M1_VALST  */ #define 	 YG_tanhES(v, i, t) 		 YtanhES[i]->Ygrad[t][v] 
/*M1_VALSIT */ #define 	 YG1_tanhES(i, t) 		 YtanhES[i]->Ygrad[t][0] 
/*M1_HERESIT*/ #define 	 YG1Y_tanhES 		 YtanhES[Yi]->Ygrad[YTemps][0] 
tanhES 		 *YtanhES[YA1_Sm];

//~~~~~~~~~~~~~~~~~~~~~~~~~ module PS1~~~~~~~~~~~~~~~~~~~~~~~~~
#define Yid_PS1 12
/*M1_VALST  */ #define 	 Ydelta_PS1(v, i, t) 		 YPS1[i]->Ydelta[t][v] 
/*M1_VALST  */ #define 	 YD_PS1(v, i, t) 		 YPS1[i]->Ydelta[t][v] 
/*M1_VALSIT */ #define 	 YD1_PS1(i, t) 		 YPS1[i]->Ydelta[t][0] 
/*M1_VALSIT */ #define 	 YD2_PS1(i, t) 		 YPS1[i]->Ydelta[t][1] 
/*M1_HERESIT*/ #define 	 YD1Y_PS1 		 YPS1[Yi]->Ydelta[YTemps][0] 
/*M1_HERESIT*/ #define 	 YD2Y_PS1 		 YPS1[Yi]->Ydelta[YTemps][1] 

class YaoPS1;
class PS1;
/*NBSMOD    */ #define 	 YNBS_PS1 	 2
/*NBIMOD    */ #define 	 YNBI_PS1 	 5
/*M1_IRMOD  */ #define 	 YPS1(i) 	 YPS1[i]
/*M1_NOWMOD */ #define 	 YPS1Y 		 YPS1[Yi]
/*M1_VALST  */ #define 	 Ystate_PS1(v, i, t) 		 YPS1[i]->Ystate[t][v] 
/*M1_VALST  */ #define 	 YS_PS1(v, i, t) 		 YPS1[i]->Ystate[t][v] 
/*M1_VALSIT */ #define 	 YS1_PS1(i, t) 		 YPS1[i]->Ystate[t][0] 
/*M1_HERESIT*/ #define 	 YS1Y_PS1 		 YPS1[Yi]->Ystate[YTemps][0] 
/*M1_VALSIT */ #define 	 YS2_PS1(i, t) 		 YPS1[i]->Ystate[t][1] 
/*M1_HERESIT*/ #define 	 YS2Y_PS1 		 YPS1[Yi]->Ystate[YTemps][1] 
/*M1_VALST  */ #define 	 Ygrad_PS1(v, i, t) 		 YPS1[i]->Ygrad[t][v] 
/*M1_VALST  */ #define 	 YG_PS1(v, i, t) 		 YPS1[i]->Ygrad[t][v] 
/*M1_VALSIT */ #define 	 YG1_PS1(i, t) 		 YPS1[i]->Ygrad[t][0] 
/*M1_HERESIT*/ #define 	 YG1Y_PS1 		 YPS1[Yi]->Ygrad[YTemps][0] 
/*M1_VALSIT */ #define 	 YG2_PS1(i, t) 		 YPS1[i]->Ygrad[t][1] 
/*M1_HERESIT*/ #define 	 YG2Y_PS1 		 YPS1[Yi]->Ygrad[YTemps][1] 
PS1 		 *YPS1[YA1_Sm];

//~~~~~~~~~~~~~~~~~~~~~~~~~ module PS2~~~~~~~~~~~~~~~~~~~~~~~~~
#define Yid_PS2 13
/*M1_VALST  */ #define 	 Ydelta_PS2(v, i, t) 		 YPS2[i]->Ydelta[t][v] 
/*M1_VALST  */ #define 	 YD_PS2(v, i, t) 		 YPS2[i]->Ydelta[t][v] 
/*M1_VALSIT */ #define 	 YD1_PS2(i, t) 		 YPS2[i]->Ydelta[t][0] 
/*M1_VALSIT */ #define 	 YD2_PS2(i, t) 		 YPS2[i]->Ydelta[t][1] 
/*M1_HERESIT*/ #define 	 YD1Y_PS2 		 YPS2[Yi]->Ydelta[YTemps][0] 
/*M1_HERESIT*/ #define 	 YD2Y_PS2 		 YPS2[Yi]->Ydelta[YTemps][1] 

class YaoPS2;
class PS2;
/*NBSMOD    */ #define 	 YNBS_PS2 	 2
/*NBIMOD    */ #define 	 YNBI_PS2 	 3
/*M1_IRMOD  */ #define 	 YPS2(i) 	 YPS2[i]
/*M1_NOWMOD */ #define 	 YPS2Y 		 YPS2[Yi]
/*M1_VALST  */ #define 	 Ystate_PS2(v, i, t) 		 YPS2[i]->Ystate[t][v] 
/*M1_VALST  */ #define 	 YS_PS2(v, i, t) 		 YPS2[i]->Ystate[t][v] 
/*M1_VALSIT */ #define 	 YS1_PS2(i, t) 		 YPS2[i]->Ystate[t][0] 
/*M1_HERESIT*/ #define 	 YS1Y_PS2 		 YPS2[Yi]->Ystate[YTemps][0] 
/*M1_VALSIT */ #define 	 YS2_PS2(i, t) 		 YPS2[i]->Ystate[t][1] 
/*M1_HERESIT*/ #define 	 YS2Y_PS2 		 YPS2[Yi]->Ystate[YTemps][1] 
/*M1_VALST  */ #define 	 Ygrad_PS2(v, i, t) 		 YPS2[i]->Ygrad[t][v] 
/*M1_VALST  */ #define 	 YG_PS2(v, i, t) 		 YPS2[i]->Ygrad[t][v] 
/*M1_VALSIT */ #define 	 YG1_PS2(i, t) 		 YPS2[i]->Ygrad[t][0] 
/*M1_HERESIT*/ #define 	 YG1Y_PS2 		 YPS2[Yi]->Ygrad[YTemps][0] 
/*M1_VALSIT */ #define 	 YG2_PS2(i, t) 		 YPS2[i]->Ygrad[t][1] 
/*M1_HERESIT*/ #define 	 YG2Y_PS2 		 YPS2[Yi]->Ygrad[YTemps][1] 
PS2 		 *YPS2[YA1_Sm];

//~~~~~~~~~~~~~~~~~~~~~~~~~ module PS3~~~~~~~~~~~~~~~~~~~~~~~~~
#define Yid_PS3 14
/*M1_VALST  */ #define 	 Ydelta_PS3(v, i, t) 		 YPS3[i]->Ydelta[t][v] 
/*M1_VALST  */ #define 	 YD_PS3(v, i, t) 		 YPS3[i]->Ydelta[t][v] 
/*M1_VALSIT */ #define 	 YD1_PS3(i, t) 		 YPS3[i]->Ydelta[t][0] 
/*M1_VALSIT */ #define 	 YD2_PS3(i, t) 		 YPS3[i]->Ydelta[t][1] 
/*M1_HERESIT*/ #define 	 YD1Y_PS3 		 YPS3[Yi]->Ydelta[YTemps][0] 
/*M1_HERESIT*/ #define 	 YD2Y_PS3 		 YPS3[Yi]->Ydelta[YTemps][1] 

class YaoPS3;
class PS3;
/*NBSMOD    */ #define 	 YNBS_PS3 	 2
/*NBIMOD    */ #define 	 YNBI_PS3 	 5
/*M1_IRMOD  */ #define 	 YPS3(i) 	 YPS3[i]
/*M1_NOWMOD */ #define 	 YPS3Y 		 YPS3[Yi]
/*M1_VALST  */ #define 	 Ystate_PS3(v, i, t) 		 YPS3[i]->Ystate[t][v] 
/*M1_VALST  */ #define 	 YS_PS3(v, i, t) 		 YPS3[i]->Ystate[t][v] 
/*M1_VALSIT */ #define 	 YS1_PS3(i, t) 		 YPS3[i]->Ystate[t][0] 
/*M1_HERESIT*/ #define 	 YS1Y_PS3 		 YPS3[Yi]->Ystate[YTemps][0] 
/*M1_VALSIT */ #define 	 YS2_PS3(i, t) 		 YPS3[i]->Ystate[t][1] 
/*M1_HERESIT*/ #define 	 YS2Y_PS3 		 YPS3[Yi]->Ystate[YTemps][1] 
/*M1_VALST  */ #define 	 Ygrad_PS3(v, i, t) 		 YPS3[i]->Ygrad[t][v] 
/*M1_VALST  */ #define 	 YG_PS3(v, i, t) 		 YPS3[i]->Ygrad[t][v] 
/*M1_VALSIT */ #define 	 YG1_PS3(i, t) 		 YPS3[i]->Ygrad[t][0] 
/*M1_HERESIT*/ #define 	 YG1Y_PS3 		 YPS3[Yi]->Ygrad[YTemps][0] 
/*M1_VALSIT */ #define 	 YG2_PS3(i, t) 		 YPS3[i]->Ygrad[t][1] 
/*M1_HERESIT*/ #define 	 YG2Y_PS3 		 YPS3[Yi]->Ygrad[YTemps][1] 
PS3 		 *YPS3[YA1_Sm];

//~~~~~~~~~~~~~~~~~~~~~~~~~ module MS1~~~~~~~~~~~~~~~~~~~~~~~~~
#define Yid_MS1 15
/*M1_VALST  */ #define 	 Ydelta_MS1(v, i, t) 		 YMS1[i]->Ydelta[t][v] 
/*M1_VALST  */ #define 	 YD_MS1(v, i, t) 		 YMS1[i]->Ydelta[t][v] 
/*M1_VALSIT */ #define 	 YD1_MS1(i, t) 		 YMS1[i]->Ydelta[t][0] 
/*M1_HERESIT*/ #define 	 YD1Y_MS1 		 YMS1[Yi]->Ydelta[YTemps][0] 

class YaoMS1;
class MS1;
/*NBSMOD    */ #define 	 YNBS_MS1 	 1
/*NBIMOD    */ #define 	 YNBI_MS1 	 3
/*M1_IRMOD  */ #define 	 YMS1(i) 	 YMS1[i]
/*M1_NOWMOD */ #define 	 YMS1Y 		 YMS1[Yi]
/*M1_VALST  */ #define 	 Ystate_MS1(v, i, t) 		 YMS1[i]->Ystate[t][v] 
/*M1_VALST  */ #define 	 YS_MS1(v, i, t) 		 YMS1[i]->Ystate[t][v] 
/*M1_VALSIT */ #define 	 YS1_MS1(i, t) 		 YMS1[i]->Ystate[t][0] 
/*M1_HERESIT*/ #define 	 YS1Y_MS1 		 YMS1[Yi]->Ystate[YTemps][0] 
/*M1_VALST  */ #define 	 Ygrad_MS1(v, i, t) 		 YMS1[i]->Ygrad[t][v] 
/*M1_VALST  */ #define 	 YG_MS1(v, i, t) 		 YMS1[i]->Ygrad[t][v] 
/*M1_VALSIT */ #define 	 YG1_MS1(i, t) 		 YMS1[i]->Ygrad[t][0] 
/*M1_HERESIT*/ #define 	 YG1Y_MS1 		 YMS1[Yi]->Ygrad[YTemps][0] 
MS1 		 *YMS1[YA1_Sm];

//~~~~~~~~~~~~~~~~~~~~~~~~~ module MS21~~~~~~~~~~~~~~~~~~~~~~~~~
#define Yid_MS21 16
/*M1_VALST  */ #define 	 Ydelta_MS21(v, i, t) 		 YMS21[i]->Ydelta[t][v] 
/*M1_VALST  */ #define 	 YD_MS21(v, i, t) 		 YMS21[i]->Ydelta[t][v] 
/*M1_VALSIT */ #define 	 YD1_MS21(i, t) 		 YMS21[i]->Ydelta[t][0] 
/*M1_HERESIT*/ #define 	 YD1Y_MS21 		 YMS21[Yi]->Ydelta[YTemps][0] 

class YaoMS21;
class MS21;
/*NBSMOD    */ #define 	 YNBS_MS21 	 1
/*NBIMOD    */ #define 	 YNBI_MS21 	 1
/*M1_IRMOD  */ #define 	 YMS21(i) 	 YMS21[i]
/*M1_NOWMOD */ #define 	 YMS21Y 		 YMS21[Yi]
/*M1_VALST  */ #define 	 Ystate_MS21(v, i, t) 		 YMS21[i]->Ystate[t][v] 
/*M1_VALST  */ #define 	 YS_MS21(v, i, t) 		 YMS21[i]->Ystate[t][v] 
/*M1_VALSIT */ #define 	 YS1_MS21(i, t) 		 YMS21[i]->Ystate[t][0] 
/*M1_HERESIT*/ #define 	 YS1Y_MS21 		 YMS21[Yi]->Ystate[YTemps][0] 
/*M1_VALST  */ #define 	 Ygrad_MS21(v, i, t) 		 YMS21[i]->Ygrad[t][v] 
/*M1_VALST  */ #define 	 YG_MS21(v, i, t) 		 YMS21[i]->Ygrad[t][v] 
/*M1_VALSIT */ #define 	 YG1_MS21(i, t) 		 YMS21[i]->Ygrad[t][0] 
/*M1_HERESIT*/ #define 	 YG1Y_MS21 		 YMS21[Yi]->Ygrad[YTemps][0] 
MS21 		 *YMS21[YA1_Sm];

//~~~~~~~~~~~~~~~~~~~~~~~~~ module MS23~~~~~~~~~~~~~~~~~~~~~~~~~
#define Yid_MS23 17
/*M1_VALST  */ #define 	 Ydelta_MS23(v, i, t) 		 YMS23[i]->Ydelta[t][v] 
/*M1_VALST  */ #define 	 YD_MS23(v, i, t) 		 YMS23[i]->Ydelta[t][v] 
/*M1_VALSIT */ #define 	 YD1_MS23(i, t) 		 YMS23[i]->Ydelta[t][0] 
/*M1_HERESIT*/ #define 	 YD1Y_MS23 		 YMS23[Yi]->Ydelta[YTemps][0] 

class YaoMS23;
class MS23;
/*NBSMOD    */ #define 	 YNBS_MS23 	 1
/*NBIMOD    */ #define 	 YNBI_MS23 	 2
/*M1_IRMOD  */ #define 	 YMS23(i) 	 YMS23[i]
/*M1_NOWMOD */ #define 	 YMS23Y 		 YMS23[Yi]
/*M1_VALST  */ #define 	 Ystate_MS23(v, i, t) 		 YMS23[i]->Ystate[t][v] 
/*M1_VALST  */ #define 	 YS_MS23(v, i, t) 		 YMS23[i]->Ystate[t][v] 
/*M1_VALSIT */ #define 	 YS1_MS23(i, t) 		 YMS23[i]->Ystate[t][0] 
/*M1_HERESIT*/ #define 	 YS1Y_MS23 		 YMS23[Yi]->Ystate[YTemps][0] 
/*M1_VALST  */ #define 	 Ygrad_MS23(v, i, t) 		 YMS23[i]->Ygrad[t][v] 
/*M1_VALST  */ #define 	 YG_MS23(v, i, t) 		 YMS23[i]->Ygrad[t][v] 
/*M1_VALSIT */ #define 	 YG1_MS23(i, t) 		 YMS23[i]->Ygrad[t][0] 
/*M1_HERESIT*/ #define 	 YG1Y_MS23 		 YMS23[Yi]->Ygrad[YTemps][0] 
MS23 		 *YMS23[YA1_Sm];

//~~~~~~~~~~~~~~~~~~~~~~~~~ module MS24~~~~~~~~~~~~~~~~~~~~~~~~~
#define Yid_MS24 18
/*M1_VALST  */ #define 	 Ydelta_MS24(v, i, t) 		 YMS24[i]->Ydelta[t][v] 
/*M1_VALST  */ #define 	 YD_MS24(v, i, t) 		 YMS24[i]->Ydelta[t][v] 
/*M1_VALSIT */ #define 	 YD1_MS24(i, t) 		 YMS24[i]->Ydelta[t][0] 
/*M1_HERESIT*/ #define 	 YD1Y_MS24 		 YMS24[Yi]->Ydelta[YTemps][0] 

class YaoMS24;
class MS24;
/*NBSMOD    */ #define 	 YNBS_MS24 	 1
/*NBIMOD    */ #define 	 YNBI_MS24 	 2
/*M1_IRMOD  */ #define 	 YMS24(i) 	 YMS24[i]
/*M1_NOWMOD */ #define 	 YMS24Y 		 YMS24[Yi]
/*M1_VALST  */ #define 	 Ystate_MS24(v, i, t) 		 YMS24[i]->Ystate[t][v] 
/*M1_VALST  */ #define 	 YS_MS24(v, i, t) 		 YMS24[i]->Ystate[t][v] 
/*M1_VALSIT */ #define 	 YS1_MS24(i, t) 		 YMS24[i]->Ystate[t][0] 
/*M1_HERESIT*/ #define 	 YS1Y_MS24 		 YMS24[Yi]->Ystate[YTemps][0] 
/*M1_VALST  */ #define 	 Ygrad_MS24(v, i, t) 		 YMS24[i]->Ygrad[t][v] 
/*M1_VALST  */ #define 	 YG_MS24(v, i, t) 		 YMS24[i]->Ygrad[t][v] 
/*M1_VALSIT */ #define 	 YG1_MS24(i, t) 		 YMS24[i]->Ygrad[t][0] 
/*M1_HERESIT*/ #define 	 YG1Y_MS24 		 YMS24[Yi]->Ygrad[YTemps][0] 
MS24 		 *YMS24[YA1_Sm];

//~~~~~~~~~~~~~~~~~~~~~~~~~ module MS3~~~~~~~~~~~~~~~~~~~~~~~~~
#define Yid_MS3 19
/*M1_VALST  */ #define 	 Ydelta_MS3(v, i, t) 		 YMS3[i]->Ydelta[t][v] 
/*M1_VALST  */ #define 	 YD_MS3(v, i, t) 		 YMS3[i]->Ydelta[t][v] 
/*M1_VALSIT */ #define 	 YD1_MS3(i, t) 		 YMS3[i]->Ydelta[t][0] 
/*M1_HERESIT*/ #define 	 YD1Y_MS3 		 YMS3[Yi]->Ydelta[YTemps][0] 

class YaoMS3;
class MS3;
/*NBSMOD    */ #define 	 YNBS_MS3 	 1
/*NBIMOD    */ #define 	 YNBI_MS3 	 2
/*M1_IRMOD  */ #define 	 YMS3(i) 	 YMS3[i]
/*M1_NOWMOD */ #define 	 YMS3Y 		 YMS3[Yi]
/*M1_VALST  */ #define 	 Ystate_MS3(v, i, t) 		 YMS3[i]->Ystate[t][v] 
/*M1_VALST  */ #define 	 YS_MS3(v, i, t) 		 YMS3[i]->Ystate[t][v] 
/*M1_VALSIT */ #define 	 YS1_MS3(i, t) 		 YMS3[i]->Ystate[t][0] 
/*M1_HERESIT*/ #define 	 YS1Y_MS3 		 YMS3[Yi]->Ystate[YTemps][0] 
/*M1_VALST  */ #define 	 Ygrad_MS3(v, i, t) 		 YMS3[i]->Ygrad[t][v] 
/*M1_VALST  */ #define 	 YG_MS3(v, i, t) 		 YMS3[i]->Ygrad[t][v] 
/*M1_VALSIT */ #define 	 YG1_MS3(i, t) 		 YMS3[i]->Ygrad[t][0] 
/*M1_HERESIT*/ #define 	 YG1Y_MS3 		 YMS3[Yi]->Ygrad[YTemps][0] 
MS3 		 *YMS3[YA1_Sm];

//~~~~~~~~~~~~~~~~~~~~~~~~~ module PR~~~~~~~~~~~~~~~~~~~~~~~~~
#define Yid_PR 20
/*M1_VALST  */ #define 	 Ydelta_PR(v, i, t) 		 YPR[i]->Ydelta[t][v] 
/*M1_VALST  */ #define 	 YD_PR(v, i, t) 		 YPR[i]->Ydelta[t][v] 
/*M1_VALSIT */ #define 	 YD1_PR(i, t) 		 YPR[i]->Ydelta[t][0] 
/*M1_HERESIT*/ #define 	 YD1Y_PR 		 YPR[Yi]->Ydelta[YTemps][0] 

class YaoPR;
class PR;
/*NBSMOD    */ #define 	 YNBS_PR 	 1
/*NBIMOD    */ #define 	 YNBI_PR 	 3
/*M1_IRMOD  */ #define 	 YPR(i) 	 YPR[i]
/*M1_NOWMOD */ #define 	 YPRY 		 YPR[Yi]
/*M1_VALST  */ #define 	 Ystate_PR(v, i, t) 		 YPR[i]->Ystate[t][v] 
/*M1_VALST  */ #define 	 YS_PR(v, i, t) 		 YPR[i]->Ystate[t][v] 
/*M1_VALSIT */ #define 	 YS1_PR(i, t) 		 YPR[i]->Ystate[t][0] 
/*M1_HERESIT*/ #define 	 YS1Y_PR 		 YPR[Yi]->Ystate[YTemps][0] 
/*M1_VALST  */ #define 	 Ygrad_PR(v, i, t) 		 YPR[i]->Ygrad[t][v] 
/*M1_VALST  */ #define 	 YG_PR(v, i, t) 		 YPR[i]->Ygrad[t][v] 
/*M1_VALSIT */ #define 	 YG1_PR(i, t) 		 YPR[i]->Ygrad[t][0] 
/*M1_HERESIT*/ #define 	 YG1Y_PR 		 YPR[Yi]->Ygrad[YTemps][0] 
PR 		 *YPR[YA1_Sm];

//~~~~~~~~~~~~~~~~~~~~~~~~~ module Q9~~~~~~~~~~~~~~~~~~~~~~~~~
#define Yid_Q9 21
/*M1_VALST  */ #define 	 Ydelta_Q9(v, i, t) 		 YQ9[i]->Ydelta[t][v] 
/*M1_VALST  */ #define 	 YD_Q9(v, i, t) 		 YQ9[i]->Ydelta[t][v] 
/*M1_VALSIT */ #define 	 YD1_Q9(i, t) 		 YQ9[i]->Ydelta[t][0] 
/*M1_HERESIT*/ #define 	 YD1Y_Q9 		 YQ9[Yi]->Ydelta[YTemps][0] 

class YaoQ9;
class Q9;
/*NBSMOD    */ #define 	 YNBS_Q9 	 1
/*NBIMOD    */ #define 	 YNBI_Q9 	 31
/*M1_IRMOD  */ #define 	 YQ9(i) 	 YQ9[i]
/*M1_NOWMOD */ #define 	 YQ9Y 		 YQ9[Yi]
/*M1_VALST  */ #define 	 Ystate_Q9(v, i, t) 		 YQ9[i]->Ystate[t][v] 
/*M1_VALST  */ #define 	 YS_Q9(v, i, t) 		 YQ9[i]->Ystate[t][v] 
/*M1_VALSIT */ #define 	 YS1_Q9(i, t) 		 YQ9[i]->Ystate[t][0] 
/*M1_HERESIT*/ #define 	 YS1Y_Q9 		 YQ9[Yi]->Ystate[YTemps][0] 
/*M1_VALST  */ #define 	 Ygrad_Q9(v, i, t) 		 YQ9[i]->Ygrad[t][v] 
/*M1_VALST  */ #define 	 YG_Q9(v, i, t) 		 YQ9[i]->Ygrad[t][v] 
/*M1_VALSIT */ #define 	 YG1_Q9(i, t) 		 YQ9[i]->Ygrad[t][0] 
/*M1_HERESIT*/ #define 	 YG1Y_Q9 		 YQ9[Yi]->Ygrad[YTemps][0] 
Q9 		 *YQ9[YA1_Sm];

//~~~~~~~~~~~~~~~~~~~~~~~~~ module Q1~~~~~~~~~~~~~~~~~~~~~~~~~
#define Yid_Q1 22
/*M1_VALST  */ #define 	 Ydelta_Q1(v, i, t) 		 YQ1[i]->Ydelta[t][v] 
/*M1_VALST  */ #define 	 YD_Q1(v, i, t) 		 YQ1[i]->Ydelta[t][v] 
/*M1_VALSIT */ #define 	 YD1_Q1(i, t) 		 YQ1[i]->Ydelta[t][0] 
/*M1_HERESIT*/ #define 	 YD1Y_Q1 		 YQ1[Yi]->Ydelta[YTemps][0] 

class YaoQ1;
class Q1;
/*NBSMOD    */ #define 	 YNBS_Q1 	 1
/*NBIMOD    */ #define 	 YNBI_Q1 	 31
/*M1_IRMOD  */ #define 	 YQ1(i) 	 YQ1[i]
/*M1_NOWMOD */ #define 	 YQ1Y 		 YQ1[Yi]
/*M1_VALST  */ #define 	 Ystate_Q1(v, i, t) 		 YQ1[i]->Ystate[t][v] 
/*M1_VALST  */ #define 	 YS_Q1(v, i, t) 		 YQ1[i]->Ystate[t][v] 
/*M1_VALSIT */ #define 	 YS1_Q1(i, t) 		 YQ1[i]->Ystate[t][0] 
/*M1_HERESIT*/ #define 	 YS1Y_Q1 		 YQ1[Yi]->Ystate[YTemps][0] 
/*M1_VALST  */ #define 	 Ygrad_Q1(v, i, t) 		 YQ1[i]->Ygrad[t][v] 
/*M1_VALST  */ #define 	 YG_Q1(v, i, t) 		 YQ1[i]->Ygrad[t][v] 
/*M1_VALSIT */ #define 	 YG1_Q1(i, t) 		 YQ1[i]->Ygrad[t][0] 
/*M1_HERESIT*/ #define 	 YG1Y_Q1 		 YQ1[Yi]->Ygrad[YTemps][0] 
Q1 		 *YQ1[YA1_Sm];

//~~~~~~~~~~~~~~~~~~~~~~~~~ module F~~~~~~~~~~~~~~~~~~~~~~~~~
#define Yid_F 23
/*M1_VALST  */ #define 	 Ydelta_F(v, i, t) 		 YF[i]->Ydelta[t][v] 
/*M1_VALST  */ #define 	 YD_F(v, i, t) 		 YF[i]->Ydelta[t][v] 
/*M1_VALSIT */ #define 	 YD1_F(i, t) 		 YF[i]->Ydelta[t][0] 
/*M1_HERESIT*/ #define 	 YD1Y_F 		 YF[Yi]->Ydelta[YTemps][0] 

class YaoF;
class F;
/*NBSMOD    */ #define 	 YNBS_F 	 1
/*NBIMOD    */ #define 	 YNBI_F 	 3
/*M1_IRMOD  */ #define 	 YF(i) 	 YF[i]
/*M1_NOWMOD */ #define 	 YFY 		 YF[Yi]
/*M1_VALST  */ #define 	 Ystate_F(v, i, t) 		 YF[i]->Ystate[t][v] 
/*M1_VALST  */ #define 	 YS_F(v, i, t) 		 YF[i]->Ystate[t][v] 
/*M1_VALSIT */ #define 	 YS1_F(i, t) 		 YF[i]->Ystate[t][0] 
/*M1_HERESIT*/ #define 	 YS1Y_F 		 YF[Yi]->Ystate[YTemps][0] 
/*M1_VALST  */ #define 	 Ygrad_F(v, i, t) 		 YF[i]->Ygrad[t][v] 
/*M1_VALST  */ #define 	 YG_F(v, i, t) 		 YF[i]->Ygrad[t][v] 
/*M1_VALSIT */ #define 	 YG1_F(i, t) 		 YF[i]->Ygrad[t][0] 
/*M1_HERESIT*/ #define 	 YG1Y_F 		 YF[Yi]->Ygrad[YTemps][0] 
F 		 *YF[YA1_Sm];

//~~~~~~~~~~~~~~~~~~~~~~~~~ module QR~~~~~~~~~~~~~~~~~~~~~~~~~
#define Yid_QR 24
/*M1_VALST  */ #define 	 Ydelta_QR(v, i, t) 		 YQR[i]->Ydelta[t][v] 
/*M1_VALST  */ #define 	 YD_QR(v, i, t) 		 YQR[i]->Ydelta[t][v] 
/*M1_VALSIT */ #define 	 YD1_QR(i, t) 		 YQR[i]->Ydelta[t][0] 
/*M1_HERESIT*/ #define 	 YD1Y_QR 		 YQR[Yi]->Ydelta[YTemps][0] 

class YaoQR;
class QR;
/*NBSMOD    */ #define 	 YNBS_QR 	 1
/*NBIMOD    */ #define 	 YNBI_QR 	 2
/*M1_IRMOD  */ #define 	 YQR(i) 	 YQR[i]
/*M1_NOWMOD */ #define 	 YQRY 		 YQR[Yi]
/*M1_VALST  */ #define 	 Ystate_QR(v, i, t) 		 YQR[i]->Ystate[t][v] 
/*M1_VALST  */ #define 	 YS_QR(v, i, t) 		 YQR[i]->Ystate[t][v] 
/*M1_VALSIT */ #define 	 YS1_QR(i, t) 		 YQR[i]->Ystate[t][0] 
/*M1_HERESIT*/ #define 	 YS1Y_QR 		 YQR[Yi]->Ystate[YTemps][0] 
/*M1_VALST  */ #define 	 Ygrad_QR(v, i, t) 		 YQR[i]->Ygrad[t][v] 
/*M1_VALST  */ #define 	 YG_QR(v, i, t) 		 YQR[i]->Ygrad[t][v] 
/*M1_VALSIT */ #define 	 YG1_QR(i, t) 		 YQR[i]->Ygrad[t][0] 
/*M1_HERESIT*/ #define 	 YG1Y_QR 		 YQR[Yi]->Ygrad[YTemps][0] 
QR 		 *YQR[YA1_Sm];

//~~~~~~~~~~~~~~~~~~~~~~~~~ module RQ9F~~~~~~~~~~~~~~~~~~~~~~~~~
#define Yid_RQ9F 25
/*M1_VALST  */ #define 	 Ydelta_RQ9F(v, i, t) 		 YRQ9F[i]->Ydelta[t][v] 
/*M1_VALST  */ #define 	 YD_RQ9F(v, i, t) 		 YRQ9F[i]->Ydelta[t][v] 
/*M1_VALSIT */ #define 	 YD1_RQ9F(i, t) 		 YRQ9F[i]->Ydelta[t][0] 
/*M1_HERESIT*/ #define 	 YD1Y_RQ9F 		 YRQ9F[Yi]->Ydelta[YTemps][0] 

class YaoRQ9F;
class RQ9F;
/*NBSMOD    */ #define 	 YNBS_RQ9F 	 1
/*NBIMOD    */ #define 	 YNBI_RQ9F 	 3
/*M1_IRMOD  */ #define 	 YRQ9F(i) 	 YRQ9F[i]
/*M1_NOWMOD */ #define 	 YRQ9FY 		 YRQ9F[Yi]
/*M1_VALST  */ #define 	 Ystate_RQ9F(v, i, t) 		 YRQ9F[i]->Ystate[t][v] 
/*M1_VALST  */ #define 	 YS_RQ9F(v, i, t) 		 YRQ9F[i]->Ystate[t][v] 
/*M1_VALSIT */ #define 	 YS1_RQ9F(i, t) 		 YRQ9F[i]->Ystate[t][0] 
/*M1_HERESIT*/ #define 	 YS1Y_RQ9F 		 YRQ9F[Yi]->Ystate[YTemps][0] 
/*M1_VALST  */ #define 	 Ygrad_RQ9F(v, i, t) 		 YRQ9F[i]->Ygrad[t][v] 
/*M1_VALST  */ #define 	 YG_RQ9F(v, i, t) 		 YRQ9F[i]->Ygrad[t][v] 
/*M1_VALSIT */ #define 	 YG1_RQ9F(i, t) 		 YRQ9F[i]->Ygrad[t][0] 
/*M1_HERESIT*/ #define 	 YG1Y_RQ9F 		 YRQ9F[Yi]->Ygrad[YTemps][0] 
RQ9F 		 *YRQ9F[YA1_Sm];

//~~~~~~~~~~~~~~~~~~~~~~~~~ module R1~~~~~~~~~~~~~~~~~~~~~~~~~
#define Yid_R1 26
/*M1_VALST  */ #define 	 Ydelta_R1(v, i, t) 		 YR1[i]->Ydelta[t][v] 
/*M1_VALST  */ #define 	 YD_R1(v, i, t) 		 YR1[i]->Ydelta[t][v] 
/*M1_VALSIT */ #define 	 YD1_R1(i, t) 		 YR1[i]->Ydelta[t][0] 
/*M1_HERESIT*/ #define 	 YD1Y_R1 		 YR1[Yi]->Ydelta[YTemps][0] 

class YaoR1;
class R1;
/*NBSMOD    */ #define 	 YNBS_R1 	 1
/*NBIMOD    */ #define 	 YNBI_R1 	 1
/*M1_IRMOD  */ #define 	 YR1(i) 	 YR1[i]
/*M1_NOWMOD */ #define 	 YR1Y 		 YR1[Yi]
/*M1_VALST  */ #define 	 Ystate_R1(v, i, t) 		 YR1[i]->Ystate[t][v] 
/*M1_VALST  */ #define 	 YS_R1(v, i, t) 		 YR1[i]->Ystate[t][v] 
/*M1_VALSIT */ #define 	 YS1_R1(i, t) 		 YR1[i]->Ystate[t][0] 
/*M1_HERESIT*/ #define 	 YS1Y_R1 		 YR1[Yi]->Ystate[YTemps][0] 
/*M1_VALST  */ #define 	 Ygrad_R1(v, i, t) 		 YR1[i]->Ygrad[t][v] 
/*M1_VALST  */ #define 	 YG_R1(v, i, t) 		 YR1[i]->Ygrad[t][v] 
/*M1_VALSIT */ #define 	 YG1_R1(i, t) 		 YR1[i]->Ygrad[t][0] 
/*M1_HERESIT*/ #define 	 YG1Y_R1 		 YR1[Yi]->Ygrad[YTemps][0] 
R1 		 *YR1[YA1_Sm];

//~~~~~~~~~~~~~~~~~~~~~~~~~ module R2~~~~~~~~~~~~~~~~~~~~~~~~~
#define Yid_R2 27
/*M1_VALST  */ #define 	 Ydelta_R2(v, i, t) 		 YR2[i]->Ydelta[t][v] 
/*M1_VALST  */ #define 	 YD_R2(v, i, t) 		 YR2[i]->Ydelta[t][v] 
/*M1_VALSIT */ #define 	 YD1_R2(i, t) 		 YR2[i]->Ydelta[t][0] 
/*M1_HERESIT*/ #define 	 YD1Y_R2 		 YR2[Yi]->Ydelta[YTemps][0] 

class YaoR2;
class R2;
/*NBSMOD    */ #define 	 YNBS_R2 	 1
/*NBIMOD    */ #define 	 YNBI_R2 	 2
/*M1_IRMOD  */ #define 	 YR2(i) 	 YR2[i]
/*M1_NOWMOD */ #define 	 YR2Y 		 YR2[Yi]
/*M1_VALST  */ #define 	 Ystate_R2(v, i, t) 		 YR2[i]->Ystate[t][v] 
/*M1_VALST  */ #define 	 YS_R2(v, i, t) 		 YR2[i]->Ystate[t][v] 
/*M1_VALSIT */ #define 	 YS1_R2(i, t) 		 YR2[i]->Ystate[t][0] 
/*M1_HERESIT*/ #define 	 YS1Y_R2 		 YR2[Yi]->Ystate[YTemps][0] 
/*M1_VALST  */ #define 	 Ygrad_R2(v, i, t) 		 YR2[i]->Ygrad[t][v] 
/*M1_VALST  */ #define 	 YG_R2(v, i, t) 		 YR2[i]->Ygrad[t][v] 
/*M1_VALSIT */ #define 	 YG1_R2(i, t) 		 YR2[i]->Ygrad[t][0] 
/*M1_HERESIT*/ #define 	 YG1Y_R2 		 YR2[Yi]->Ygrad[YTemps][0] 
R2 		 *YR2[YA1_Sm];

//~~~~~~~~~~~~~~~~~~~~~~~~~ module RX3~~~~~~~~~~~~~~~~~~~~~~~~~
#define Yid_RX3 28
/*M1_VALST  */ #define 	 Ydelta_RX3(v, i, t) 		 YRX3[i]->Ydelta[t][v] 
/*M1_VALST  */ #define 	 YD_RX3(v, i, t) 		 YRX3[i]->Ydelta[t][v] 
/*M1_VALSIT */ #define 	 YD1_RX3(i, t) 		 YRX3[i]->Ydelta[t][0] 
/*M1_HERESIT*/ #define 	 YD1Y_RX3 		 YRX3[Yi]->Ydelta[YTemps][0] 

class YaoRX3;
class RX3;
/*NBSMOD    */ #define 	 YNBS_RX3 	 1
/*NBIMOD    */ #define 	 YNBI_RX3 	 2
/*M1_IRMOD  */ #define 	 YRX3(i) 	 YRX3[i]
/*M1_NOWMOD */ #define 	 YRX3Y 		 YRX3[Yi]
/*M1_VALST  */ #define 	 Ystate_RX3(v, i, t) 		 YRX3[i]->Ystate[t][v] 
/*M1_VALST  */ #define 	 YS_RX3(v, i, t) 		 YRX3[i]->Ystate[t][v] 
/*M1_VALSIT */ #define 	 YS1_RX3(i, t) 		 YRX3[i]->Ystate[t][0] 
/*M1_HERESIT*/ #define 	 YS1Y_RX3 		 YRX3[Yi]->Ystate[YTemps][0] 
/*M1_VALST  */ #define 	 Ygrad_RX3(v, i, t) 		 YRX3[i]->Ygrad[t][v] 
/*M1_VALST  */ #define 	 YG_RX3(v, i, t) 		 YRX3[i]->Ygrad[t][v] 
/*M1_VALSIT */ #define 	 YG1_RX3(i, t) 		 YRX3[i]->Ygrad[t][0] 
/*M1_HERESIT*/ #define 	 YG1Y_RX3 		 YRX3[Yi]->Ygrad[YTemps][0] 
RX3 		 *YRX3[YA1_Sm];

//~~~~~~~~~~~~~~~~~~~~~~~~~ module RX32~~~~~~~~~~~~~~~~~~~~~~~~~
#define Yid_RX32 29
/*M1_VALST  */ #define 	 Ydelta_RX32(v, i, t) 		 YRX32[i]->Ydelta[t][v] 
/*M1_VALST  */ #define 	 YD_RX32(v, i, t) 		 YRX32[i]->Ydelta[t][v] 
/*M1_VALSIT */ #define 	 YD1_RX32(i, t) 		 YRX32[i]->Ydelta[t][0] 
/*M1_HERESIT*/ #define 	 YD1Y_RX32 		 YRX32[Yi]->Ydelta[YTemps][0] 

class YaoRX32;
class RX32;
/*NBSMOD    */ #define 	 YNBS_RX32 	 1
/*NBIMOD    */ #define 	 YNBI_RX32 	 1
/*M1_IRMOD  */ #define 	 YRX32(i) 	 YRX32[i]
/*M1_NOWMOD */ #define 	 YRX32Y 		 YRX32[Yi]
/*M1_VALST  */ #define 	 Ystate_RX32(v, i, t) 		 YRX32[i]->Ystate[t][v] 
/*M1_VALST  */ #define 	 YS_RX32(v, i, t) 		 YRX32[i]->Ystate[t][v] 
/*M1_VALSIT */ #define 	 YS1_RX32(i, t) 		 YRX32[i]->Ystate[t][0] 
/*M1_HERESIT*/ #define 	 YS1Y_RX32 		 YRX32[Yi]->Ystate[YTemps][0] 
/*M1_VALST  */ #define 	 Ygrad_RX32(v, i, t) 		 YRX32[i]->Ygrad[t][v] 
/*M1_VALST  */ #define 	 YG_RX32(v, i, t) 		 YRX32[i]->Ygrad[t][v] 
/*M1_VALSIT */ #define 	 YG1_RX32(i, t) 		 YRX32[i]->Ygrad[t][0] 
/*M1_HERESIT*/ #define 	 YG1Y_RX32 		 YRX32[Yi]->Ygrad[YTemps][0] 
RX32 		 *YRX32[YA1_Sm];

//~~~~~~~~~~~~~~~~~~~~~~~~~ module Q1QF~~~~~~~~~~~~~~~~~~~~~~~~~
#define Yid_Q1QF 30
/*M1_VALST  */ #define 	 Ydelta_Q1QF(v, i, t) 		 YQ1QF[i]->Ydelta[t][v] 
/*M1_VALST  */ #define 	 YD_Q1QF(v, i, t) 		 YQ1QF[i]->Ydelta[t][v] 
/*M1_VALSIT */ #define 	 YD1_Q1QF(i, t) 		 YQ1QF[i]->Ydelta[t][0] 
/*M1_HERESIT*/ #define 	 YD1Y_Q1QF 		 YQ1QF[Yi]->Ydelta[YTemps][0] 

class YaoQ1QF;
class Q1QF;
/*NBSMOD    */ #define 	 YNBS_Q1QF 	 1
/*NBIMOD    */ #define 	 YNBI_Q1QF 	 2
/*M1_IRMOD  */ #define 	 YQ1QF(i) 	 YQ1QF[i]
/*M1_NOWMOD */ #define 	 YQ1QFY 		 YQ1QF[Yi]
/*M1_VALST  */ #define 	 Ystate_Q1QF(v, i, t) 		 YQ1QF[i]->Ystate[t][v] 
/*M1_VALST  */ #define 	 YS_Q1QF(v, i, t) 		 YQ1QF[i]->Ystate[t][v] 
/*M1_VALSIT */ #define 	 YS1_Q1QF(i, t) 		 YQ1QF[i]->Ystate[t][0] 
/*M1_HERESIT*/ #define 	 YS1Y_Q1QF 		 YQ1QF[Yi]->Ystate[YTemps][0] 
/*M1_VALST  */ #define 	 Ygrad_Q1QF(v, i, t) 		 YQ1QF[i]->Ygrad[t][v] 
/*M1_VALST  */ #define 	 YG_Q1QF(v, i, t) 		 YQ1QF[i]->Ygrad[t][v] 
/*M1_VALSIT */ #define 	 YG1_Q1QF(i, t) 		 YQ1QF[i]->Ygrad[t][0] 
/*M1_HERESIT*/ #define 	 YG1Y_Q1QF 		 YQ1QF[Yi]->Ygrad[YTemps][0] 
Q1QF 		 *YQ1QF[YA1_Sm];

//~~~~~~~~~~~~~~~~~~~~~~~~~ module QD~~~~~~~~~~~~~~~~~~~~~~~~~
#define Yid_QD 31
/*M1_VALST  */ #define 	 Ydelta_QD(v, i, t) 		 YQD[i]->Ydelta[t][v] 
/*M1_VALST  */ #define 	 YD_QD(v, i, t) 		 YQD[i]->Ydelta[t][v] 
/*M1_VALSIT */ #define 	 YD1_QD(i, t) 		 YQD[i]->Ydelta[t][0] 
/*M1_HERESIT*/ #define 	 YD1Y_QD 		 YQD[Yi]->Ydelta[YTemps][0] 

class YaoQD;
class QD;
/*NBSMOD    */ #define 	 YNBS_QD 	 1
/*NBIMOD    */ #define 	 YNBI_QD 	 1
/*M1_IRMOD  */ #define 	 YQD(i) 	 YQD[i]
/*M1_NOWMOD */ #define 	 YQDY 		 YQD[Yi]
/*M1_VALST  */ #define 	 Ystate_QD(v, i, t) 		 YQD[i]->Ystate[t][v] 
/*M1_VALST  */ #define 	 YS_QD(v, i, t) 		 YQD[i]->Ystate[t][v] 
/*M1_VALSIT */ #define 	 YS1_QD(i, t) 		 YQD[i]->Ystate[t][0] 
/*M1_HERESIT*/ #define 	 YS1Y_QD 		 YQD[Yi]->Ystate[YTemps][0] 
/*M1_VALST  */ #define 	 Ygrad_QD(v, i, t) 		 YQD[i]->Ygrad[t][v] 
/*M1_VALST  */ #define 	 YG_QD(v, i, t) 		 YQD[i]->Ygrad[t][v] 
/*M1_VALSIT */ #define 	 YG1_QD(i, t) 		 YQD[i]->Ygrad[t][0] 
/*M1_HERESIT*/ #define 	 YG1Y_QD 		 YQD[Yi]->Ygrad[YTemps][0] 
QD 		 *YQD[YA1_Sm];

//~~~~~~~~~~~~~~~~~~~~~~~~~ module QS~~~~~~~~~~~~~~~~~~~~~~~~~
#define Yid_QS 32
/*M1_VALST  */ #define 	 Ydelta_QS(v, i, t) 		 YQS[i]->Ydelta[t][v] 
/*M1_VALST  */ #define 	 YD_QS(v, i, t) 		 YQS[i]->Ydelta[t][v] 
/*M1_VALSIT */ #define 	 YD1_QS(i, t) 		 YQS[i]->Ydelta[t][0] 
/*M1_HERESIT*/ #define 	 YD1Y_QS 		 YQS[Yi]->Ydelta[YTemps][0] 

class YaoQS;
class QS;
/*NBSMOD    */ #define 	 YNBS_QS 	 1
/*NBIMOD    */ #define 	 YNBI_QS 	 2
/*M1_IRMOD  */ #define 	 YQS(i) 	 YQS[i]
/*M1_NOWMOD */ #define 	 YQSY 		 YQS[Yi]
/*M1_VALST  */ #define 	 Ystate_QS(v, i, t) 		 YQS[i]->Ystate[t][v] 
/*M1_VALST  */ #define 	 YS_QS(v, i, t) 		 YQS[i]->Ystate[t][v] 
/*M1_VALSIT */ #define 	 YS1_QS(i, t) 		 YQS[i]->Ystate[t][0] 
/*M1_HERESIT*/ #define 	 YS1Y_QS 		 YQS[Yi]->Ystate[YTemps][0] 
/*M1_VALST  */ #define 	 Ygrad_QS(v, i, t) 		 YQS[i]->Ygrad[t][v] 
/*M1_VALST  */ #define 	 YG_QS(v, i, t) 		 YQS[i]->Ygrad[t][v] 
/*M1_VALSIT */ #define 	 YG1_QS(i, t) 		 YQS[i]->Ygrad[t][0] 
/*M1_HERESIT*/ #define 	 YG1Y_QS 		 YQS[Yi]->Ygrad[YTemps][0] 
QS 		 *YQS[YA1_Sm];
/*M1_VALSG  */ #define 	 Ywish_QS(v, i) 		 YQS[i]->Ywish[v] 
/*M1_VALSG  */ #define 	 YW_QS(v, i) 		 YQS[i]->Ywish[v] 
/*M1_VALSGI */ #define 	 YW1_QS(i) 		 YQS[i]->Ywish[0] 
/*M1_HERESGI*/ #define 	 YW1Y_QS 		 YQS[Yi]->Ywish[0] 
#define  YSIZEPB   4//sum of the number of states (output) of all targets

//¤ ¤ ¤ ¤ FOR M1QN3 ¤ ¤ ¤ ¤ ¤ ¤ ¤ ¤ ¤ ¤ ¤ ¤ ¤ ¤ ¤ ¤ ¤ ¤ ¤ ¤ ¤ ¤ ¤
float   Y3x[YSIZEPB]; //table for the states of targets 
float   Y3g[YSIZEPB]; //table for the gradients of targets
#define Y3_SZ_RZ   88  //rz dimension
float   Y3rz[Y3_SZ_RZ];
float         Y3xinf[YSIZEPB]; //down borne table of target's states 
float   Y3xsup[YSIZEPB]; //up borne table of target's state 
#define Y3_SZ_IZ   9  //iz dimension
float   Y3dxmin[YSIZEPB]; //resolution table for the vector to be controlled 

/*------- GENERATION of global objects ------------------------*/
#define YSIZECO	       1 //size of modules cout (atempo)(event if not in order !)
#define YMAX_NBI        31 //max input number of a module 
#define YMAX_NBS        2 //max output number of a module
#define YMAX_JAC_NBI    31 //max number of input for the jacobian (Yjac) 
#define YMAX_JAC_NBS    2 //max number of output for the jacobian (Yjac) 
double  Yting[YMAX_NBI];                //max table for a global and common inputs number
double  Yjac[YMAX_JAC_NBS][YMAX_JAC_NBI]; //max table for a global and common jacobian
#define YJ1I1  Yjac[0][0] 
#define YJ1I2  Yjac[0][1] 
#define YJ1I3  Yjac[0][2] 
#define YJ1I4  Yjac[0][3] 
#define YJ1I5  Yjac[0][4] 
#define YJ1I6  Yjac[0][5] 
#define YJ1I7  Yjac[0][6] 
#define YJ1I8  Yjac[0][7] 
#define YJ1I9  Yjac[0][8] 
#define YJ1I10  Yjac[0][9] 
#define YJ1I11  Yjac[0][10] 
#define YJ1I12  Yjac[0][11] 
#define YJ1I13  Yjac[0][12] 
#define YJ1I14  Yjac[0][13] 
#define YJ1I15  Yjac[0][14] 
#define YJ1I16  Yjac[0][15] 
#define YJ1I17  Yjac[0][16] 
#define YJ1I18  Yjac[0][17] 
#define YJ1I19  Yjac[0][18] 
#define YJ1I20  Yjac[0][19] 
#define YJ1I21  Yjac[0][20] 
#define YJ1I22  Yjac[0][21] 
#define YJ1I23  Yjac[0][22] 
#define YJ1I24  Yjac[0][23] 
#define YJ1I25  Yjac[0][24] 
#define YJ1I26  Yjac[0][25] 
#define YJ1I27  Yjac[0][26] 
#define YJ1I28  Yjac[0][27] 
#define YJ1I29  Yjac[0][28] 
#define YJ1I30  Yjac[0][29] 
#define YJ1I31  Yjac[0][30] 
#define YJ2I1  Yjac[1][0] 
#define YJ2I2  Yjac[1][1] 
#define YJ2I3  Yjac[1][2] 
#define YJ2I4  Yjac[1][3] 
#define YJ2I5  Yjac[1][4] 
#define YJ2I6  Yjac[1][5] 
#define YJ2I7  Yjac[1][6] 
#define YJ2I8  Yjac[1][7] 
#define YJ2I9  Yjac[1][8] 
#define YJ2I10  Yjac[1][9] 
#define YJ2I11  Yjac[1][10] 
#define YJ2I12  Yjac[1][11] 
#define YJ2I13  Yjac[1][12] 
#define YJ2I14  Yjac[1][13] 
#define YJ2I15  Yjac[1][14] 
#define YJ2I16  Yjac[1][15] 
#define YJ2I17  Yjac[1][16] 
#define YJ2I18  Yjac[1][17] 
#define YJ2I19  Yjac[1][18] 
#define YJ2I20  Yjac[1][19] 
#define YJ2I21  Yjac[1][20] 
#define YJ2I22  Yjac[1][21] 
#define YJ2I23  Yjac[1][22] 
#define YJ2I24  Yjac[1][23] 
#define YJ2I25  Yjac[1][24] 
#define YJ2I26  Yjac[1][25] 
#define YJ2I27  Yjac[1][26] 
#define YJ2I28  Yjac[1][27] 
#define YJ2I29  Yjac[1][28] 
#define YJ2I30  Yjac[1][29] 
#define YJ2I31  Yjac[1][30] 
double  Ytbeta[YMAX_NBI];               //max table of global and common beta

/*------- SOME OTHER AUTOMATIC GENERATION ------------------*/

struct Yst_obs {
  int   time;
  int   imod;
  int   smod;
  int   iaxe;
  int   jaxe;
  int  kaxe;
  YREAL vobs;
  YREAL qtea;
};
struct Yst_obs Yaobs;
int Yobs_insert(struct Yst_obs *aobs);

/*------- GENERATION of NECESSARY PROTOTYPES -------------*/
double Ycostdiff(double dinov, double dcov);

/*------- AUTOMATIC GENERATION of YaoModul class ----------*/

//////////// Begin of the Yao Class YaoX1 ////////////
class   	      YaoX1
{
	 public:
	      double	 Ystate[YNBS_X1];
	      double	 Ygrad[YNBS_X1];
	      double	 Yepsi[YNBS_X1];
	      double	 Ywish[YNBS_X1];
	      double	 Ydelta[1][YNBS_X1];

//:=========> Constructor - Destructor ============
YaoX1(){}
~YaoX1(){}

};

//////////// Begin of the Yao Class YaoX2 ////////////
class   	      YaoX2
{
	 public:
	      double	 Ystate[YNBS_X2];
	      double	 Ygrad[YNBS_X2];
	      double	 Yepsi[YNBS_X2];
	      double	 Ywish[YNBS_X2];
	      double	 Ydelta[1][YNBS_X2];

//:=========> Constructor - Destructor ============
YaoX2(){}
~YaoX2(){}

};

//////////// Begin of the Yao Class YaoX3 ////////////
class   	      YaoX3
{
	 public:
	      double	 Ystate[YNBS_X3];
	      double	 Ygrad[YNBS_X3];
	      double	 Yepsi[YNBS_X3];
	      double	 Ywish[YNBS_X3];
	      double	 Ydelta[1][YNBS_X3];

//:=========> Constructor - Destructor ============
YaoX3(){}
~YaoX3(){}

};

//////////// Begin of the Yao Class YaoX4 ////////////
class   	      YaoX4
{
	 public:
	      double	 Ystate[YNBS_X4];
	      double	 Ygrad[YNBS_X4];
	      double	 Yepsi[YNBS_X4];
	      double	 Ywish[YNBS_X4];
	      double	 Ydelta[1][YNBS_X4];

//:=========> Constructor - Destructor ============
YaoX4(){}
~YaoX4(){}

};

//////////// Begin of the Yao Class YaoP ////////////
class   	      YaoP
{
	 public:
	      double	 Ystate[YNBALLTIME_Tm][YNBS_P];
	      double	 Ygrad[YNBALLTIME_Tm][YNBS_P];
	      double	 Ydelta[YNBALLTIME_Tm][YNBS_P];

//:=========> Constructor - Destructor ============
YaoP(){}
~YaoP(){}

};

//////////// Begin of the Yao Class YaoE ////////////
class   	      YaoE
{
	 public:
	      double	 Ystate[YNBALLTIME_Tm][YNBS_E];
	      double	 Ygrad[YNBALLTIME_Tm][YNBS_E];
	      double	 Ydelta[YNBALLTIME_Tm][YNBS_E];

//:=========> Constructor - Destructor ============
YaoE(){}
~YaoE(){}

};

//////////// Begin of the Yao Class YaoINTERC ////////////
class   	      YaoINTERC
{
	 public:
	      double	 Ystate[YNBALLTIME_Tm][YNBS_INTERC];
	      double	 Ygrad[YNBALLTIME_Tm][YNBS_INTERC];
	      double	 Ydelta[YNBALLTIME_Tm][YNBS_INTERC];

//:=========> Constructor - Destructor ============
YaoINTERC(){}
~YaoINTERC(){}

};

/*M_PCL   */
class 	 INTERC:public YaoINTERC 
{	public: 
	 INTERC(){}; 
	 ~INTERC (){}; 
	 void forward (double x0,double x1); 
	 void backward(double x0,double x1);  
};

//////////// Begin of the Yao Class YaoSX1 ////////////
class   	      YaoSX1
{
	 public:
	      double	 Ystate[YNBALLTIME_Tm][YNBS_SX1];
	      double	 Ygrad[YNBALLTIME_Tm][YNBS_SX1];
	      double	 Ydelta[YNBALLTIME_Tm][YNBS_SX1];

//:=========> Constructor - Destructor ============
YaoSX1(){}
~YaoSX1(){}

};

/*M_PCL   */
class 	 SX1:public YaoSX1 
{	public: 
	 SX1(){}; 
	 ~SX1 (){}; 
	 void forward (double x0,double x1); 
	 void backward(double x0,double x1);  
};

//////////// Begin of the Yao Class YaoPNX1 ////////////
class   	      YaoPNX1
{
	 public:
	      double	 Ystate[YNBALLTIME_Tm][YNBS_PNX1];
	      double	 Ygrad[YNBALLTIME_Tm][YNBS_PNX1];
	      double	 Ydelta[YNBALLTIME_Tm][YNBS_PNX1];

//:=========> Constructor - Destructor ============
YaoPNX1(){}
~YaoPNX1(){}

};

/*M_PCL   */
class 	 PNX1:public YaoPNX1 
{	public: 
	 PNX1(){}; 
	 ~PNX1 (){}; 
	 void forward (double x0,double x1); 
	 void backward(double x0,double x1);  
};

//////////// Begin of the Yao Class YaoENX1 ////////////
class   	      YaoENX1
{
	 public:
	      double	 Ystate[YNBALLTIME_Tm][YNBS_ENX1];
	      double	 Ygrad[YNBALLTIME_Tm][YNBS_ENX1];
	      double	 Ydelta[YNBALLTIME_Tm][YNBS_ENX1];

//:=========> Constructor - Destructor ============
YaoENX1(){}
~YaoENX1(){}

};

/*M_PCL   */
class 	 ENX1:public YaoENX1 
{	public: 
	 ENX1(){}; 
	 ~ENX1 (){}; 
	 void forward (double x0,double x1); 
	 void backward(double x0,double x1);  
};

//////////// Begin of the Yao Class YaotanhPS ////////////
class   	      YaotanhPS
{
	 public:
	      double	 Ystate[YNBALLTIME_Tm][YNBS_tanhPS];
	      double	 Ygrad[YNBALLTIME_Tm][YNBS_tanhPS];
	      double	 Ydelta[YNBALLTIME_Tm][YNBS_tanhPS];

//:=========> Constructor - Destructor ============
YaotanhPS(){}
~YaotanhPS(){}

};

/*M_PCL   */
class 	 tanhPS:public YaotanhPS 
{	public: 
	 tanhPS(){}; 
	 ~tanhPS (){}; 
	 void forward (double x0); 
	 void backward(double x0);  
};

//////////// Begin of the Yao Class YaotanhES ////////////
class   	      YaotanhES
{
	 public:
	      double	 Ystate[YNBALLTIME_Tm][YNBS_tanhES];
	      double	 Ygrad[YNBALLTIME_Tm][YNBS_tanhES];
	      double	 Ydelta[YNBALLTIME_Tm][YNBS_tanhES];

//:=========> Constructor - Destructor ============
YaotanhES(){}
~YaotanhES(){}

};

/*M_PCL   */
class 	 tanhES:public YaotanhES 
{	public: 
	 tanhES(){}; 
	 ~tanhES (){}; 
	 void forward (double x0); 
	 void backward(double x0);  
};

//////////// Begin of the Yao Class YaoPS1 ////////////
class   	      YaoPS1
{
	 public:
	      double	 Ystate[YNBALLTIME_Tm][YNBS_PS1];
	      double	 Ygrad[YNBALLTIME_Tm][YNBS_PS1];
	      double	 Ydelta[YNBALLTIME_Tm][YNBS_PS1];

//:=========> Constructor - Destructor ============
YaoPS1(){}
~YaoPS1(){}

};

/*M_PCL   */
class 	 PS1:public YaoPS1 
{	public: 
	 PS1(){}; 
	 ~PS1 (){}; 
	 void forward (double x0,double x1,double x2,double x3,double x4); 
	 void backward(double x0,double x1,double x2,double x3,double x4);  
};

//////////// Begin of the Yao Class YaoPS2 ////////////
class   	      YaoPS2
{
	 public:
	      double	 Ystate[YNBALLTIME_Tm][YNBS_PS2];
	      double	 Ygrad[YNBALLTIME_Tm][YNBS_PS2];
	      double	 Ydelta[YNBALLTIME_Tm][YNBS_PS2];

//:=========> Constructor - Destructor ============
YaoPS2(){}
~YaoPS2(){}

};

/*M_PCL   */
class 	 PS2:public YaoPS2 
{	public: 
	 PS2(){}; 
	 ~PS2 (){}; 
	 void forward (double x0,double x1,double x2); 
	 void backward(double x0,double x1,double x2);  
};

//////////// Begin of the Yao Class YaoPS3 ////////////
class   	      YaoPS3
{
	 public:
	      double	 Ystate[YNBALLTIME_Tm][YNBS_PS3];
	      double	 Ygrad[YNBALLTIME_Tm][YNBS_PS3];
	      double	 Ydelta[YNBALLTIME_Tm][YNBS_PS3];

//:=========> Constructor - Destructor ============
YaoPS3(){}
~YaoPS3(){}

};

/*M_PCL   */
class 	 PS3:public YaoPS3 
{	public: 
	 PS3(){}; 
	 ~PS3 (){}; 
	 void forward (double x0,double x1,double x2,double x3,double x4); 
	 void backward(double x0,double x1,double x2,double x3,double x4);  
};

//////////// Begin of the Yao Class YaoMS1 ////////////
class   	      YaoMS1
{
	 public:
	      double	 Ystate[YNBALLTIME_Tm][YNBS_MS1];
	      double	 Ygrad[YNBALLTIME_Tm][YNBS_MS1];
	      double	 Ydelta[YNBALLTIME_Tm][YNBS_MS1];

//:=========> Constructor - Destructor ============
YaoMS1(){}
~YaoMS1(){}

};

/*M_PCL   */
class 	 MS1:public YaoMS1 
{	public: 
	 MS1(){}; 
	 ~MS1 (){}; 
	 void forward (double x0,double x1,double x2); 
	 void backward(double x0,double x1,double x2);  
};

//////////// Begin of the Yao Class YaoMS21 ////////////
class   	      YaoMS21
{
	 public:
	      double	 Ystate[YNBALLTIME_Tm][YNBS_MS21];
	      double	 Ygrad[YNBALLTIME_Tm][YNBS_MS21];
	      double	 Ydelta[YNBALLTIME_Tm][YNBS_MS21];

//:=========> Constructor - Destructor ============
YaoMS21(){}
~YaoMS21(){}

};

/*M_PCL   */
class 	 MS21:public YaoMS21 
{	public: 
	 MS21(){}; 
	 ~MS21 (){}; 
	 void forward (double x0); 
	 void backward(double x0);  
};

//////////// Begin of the Yao Class YaoMS23 ////////////
class   	      YaoMS23
{
	 public:
	      double	 Ystate[YNBALLTIME_Tm][YNBS_MS23];
	      double	 Ygrad[YNBALLTIME_Tm][YNBS_MS23];
	      double	 Ydelta[YNBALLTIME_Tm][YNBS_MS23];

//:=========> Constructor - Destructor ============
YaoMS23(){}
~YaoMS23(){}

};

/*M_PCL   */
class 	 MS23:public YaoMS23 
{	public: 
	 MS23(){}; 
	 ~MS23 (){}; 
	 void forward (double x0,double x1); 
	 void backward(double x0,double x1);  
};

//////////// Begin of the Yao Class YaoMS24 ////////////
class   	      YaoMS24
{
	 public:
	      double	 Ystate[YNBALLTIME_Tm][YNBS_MS24];
	      double	 Ygrad[YNBALLTIME_Tm][YNBS_MS24];
	      double	 Ydelta[YNBALLTIME_Tm][YNBS_MS24];

//:=========> Constructor - Destructor ============
YaoMS24(){}
~YaoMS24(){}

};

/*M_PCL   */
class 	 MS24:public YaoMS24 
{	public: 
	 MS24(){}; 
	 ~MS24 (){}; 
	 void forward (double x0,double x1); 
	 void backward(double x0,double x1);  
};

//////////// Begin of the Yao Class YaoMS3 ////////////
class   	      YaoMS3
{
	 public:
	      double	 Ystate[YNBALLTIME_Tm][YNBS_MS3];
	      double	 Ygrad[YNBALLTIME_Tm][YNBS_MS3];
	      double	 Ydelta[YNBALLTIME_Tm][YNBS_MS3];

//:=========> Constructor - Destructor ============
YaoMS3(){}
~YaoMS3(){}

};

/*M_PCL   */
class 	 MS3:public YaoMS3 
{	public: 
	 MS3(){}; 
	 ~MS3 (){}; 
	 void forward (double x0,double x1); 
	 void backward(double x0,double x1);  
};

//////////// Begin of the Yao Class YaoPR ////////////
class   	      YaoPR
{
	 public:
	      double	 Ystate[YNBALLTIME_Tm][YNBS_PR];
	      double	 Ygrad[YNBALLTIME_Tm][YNBS_PR];
	      double	 Ydelta[YNBALLTIME_Tm][YNBS_PR];

//:=========> Constructor - Destructor ============
YaoPR(){}
~YaoPR(){}

};

/*M_PCL   */
class 	 PR:public YaoPR 
{	public: 
	 PR(){}; 
	 ~PR (){}; 
	 void forward (double x0,double x1,double x2); 
	 void backward(double x0,double x1,double x2);  
};

//////////// Begin of the Yao Class YaoQ9 ////////////
class   	      YaoQ9
{
	 public:
	      double	 Ystate[YNBALLTIME_Tm][YNBS_Q9];
	      double	 Ygrad[YNBALLTIME_Tm][YNBS_Q9];
	      double	 Ydelta[YNBALLTIME_Tm][YNBS_Q9];

//:=========> Constructor - Destructor ============
YaoQ9(){}
~YaoQ9(){}

};

/*M_PCL   */
class 	 Q9:public YaoQ9 
{	public: 
	 Q9(){}; 
	 ~Q9 (){}; 
	 void forward (double x0,double x1,double x2,double x3,double x4,double x5,double x6,double x7,double x8,double x9,double x10,double x11,double x12,double x13,double x14,double x15,double x16,double x17,double x18,double x19,double x20,double x21,double x22,double x23,double x24,double x25,double x26,double x27,double x28,double x29,double x30); 
	 void backward(double x0,double x1,double x2,double x3,double x4,double x5,double x6,double x7,double x8,double x9,double x10,double x11,double x12,double x13,double x14,double x15,double x16,double x17,double x18,double x19,double x20,double x21,double x22,double x23,double x24,double x25,double x26,double x27,double x28,double x29,double x30);  
};

//////////// Begin of the Yao Class YaoQ1 ////////////
class   	      YaoQ1
{
	 public:
	      double	 Ystate[YNBALLTIME_Tm][YNBS_Q1];
	      double	 Ygrad[YNBALLTIME_Tm][YNBS_Q1];
	      double	 Ydelta[YNBALLTIME_Tm][YNBS_Q1];

//:=========> Constructor - Destructor ============
YaoQ1(){}
~YaoQ1(){}

};

/*M_PCL   */
class 	 Q1:public YaoQ1 
{	public: 
	 Q1(){}; 
	 ~Q1 (){}; 
	 void forward (double x0,double x1,double x2,double x3,double x4,double x5,double x6,double x7,double x8,double x9,double x10,double x11,double x12,double x13,double x14,double x15,double x16,double x17,double x18,double x19,double x20,double x21,double x22,double x23,double x24,double x25,double x26,double x27,double x28,double x29,double x30); 
	 void backward(double x0,double x1,double x2,double x3,double x4,double x5,double x6,double x7,double x8,double x9,double x10,double x11,double x12,double x13,double x14,double x15,double x16,double x17,double x18,double x19,double x20,double x21,double x22,double x23,double x24,double x25,double x26,double x27,double x28,double x29,double x30);  
};

//////////// Begin of the Yao Class YaoF ////////////
class   	      YaoF
{
	 public:
	      double	 Ystate[YNBALLTIME_Tm][YNBS_F];
	      double	 Ygrad[YNBALLTIME_Tm][YNBS_F];
	      double	 Ydelta[YNBALLTIME_Tm][YNBS_F];

//:=========> Constructor - Destructor ============
YaoF(){}
~YaoF(){}

};

/*M_PCL   */
class 	 F:public YaoF 
{	public: 
	 F(){}; 
	 ~F (){}; 
	 void forward (double x0,double x1,double x2); 
	 void backward(double x0,double x1,double x2);  
};

//////////// Begin of the Yao Class YaoQR ////////////
class   	      YaoQR
{
	 public:
	      double	 Ystate[YNBALLTIME_Tm][YNBS_QR];
	      double	 Ygrad[YNBALLTIME_Tm][YNBS_QR];
	      double	 Ydelta[YNBALLTIME_Tm][YNBS_QR];

//:=========> Constructor - Destructor ============
YaoQR(){}
~YaoQR(){}

};

/*M_PCL   */
class 	 QR:public YaoQR 
{	public: 
	 QR(){}; 
	 ~QR (){}; 
	 void forward (double x0,double x1); 
	 void backward(double x0,double x1);  
};

//////////// Begin of the Yao Class YaoRQ9F ////////////
class   	      YaoRQ9F
{
	 public:
	      double	 Ystate[YNBALLTIME_Tm][YNBS_RQ9F];
	      double	 Ygrad[YNBALLTIME_Tm][YNBS_RQ9F];
	      double	 Ydelta[YNBALLTIME_Tm][YNBS_RQ9F];

//:=========> Constructor - Destructor ============
YaoRQ9F(){}
~YaoRQ9F(){}

};

/*M_PCL   */
class 	 RQ9F:public YaoRQ9F 
{	public: 
	 RQ9F(){}; 
	 ~RQ9F (){}; 
	 void forward (double x0,double x1,double x2); 
	 void backward(double x0,double x1,double x2);  
};

//////////// Begin of the Yao Class YaoR1 ////////////
class   	      YaoR1
{
	 public:
	      double	 Ystate[YNBALLTIME_Tm][YNBS_R1];
	      double	 Ygrad[YNBALLTIME_Tm][YNBS_R1];
	      double	 Ydelta[YNBALLTIME_Tm][YNBS_R1];

//:=========> Constructor - Destructor ============
YaoR1(){}
~YaoR1(){}

};

/*M_PCL   */
class 	 R1:public YaoR1 
{	public: 
	 R1(){}; 
	 ~R1 (){}; 
	 void forward (double x0); 
	 void backward(double x0);  
};

//////////// Begin of the Yao Class YaoR2 ////////////
class   	      YaoR2
{
	 public:
	      double	 Ystate[YNBALLTIME_Tm][YNBS_R2];
	      double	 Ygrad[YNBALLTIME_Tm][YNBS_R2];
	      double	 Ydelta[YNBALLTIME_Tm][YNBS_R2];

//:=========> Constructor - Destructor ============
YaoR2(){}
~YaoR2(){}

};

/*M_PCL   */
class 	 R2:public YaoR2 
{	public: 
	 R2(){}; 
	 ~R2 (){}; 
	 void forward (double x0,double x1); 
	 void backward(double x0,double x1);  
};

//////////// Begin of the Yao Class YaoRX3 ////////////
class   	      YaoRX3
{
	 public:
	      double	 Ystate[YNBALLTIME_Tm][YNBS_RX3];
	      double	 Ygrad[YNBALLTIME_Tm][YNBS_RX3];
	      double	 Ydelta[YNBALLTIME_Tm][YNBS_RX3];

//:=========> Constructor - Destructor ============
YaoRX3(){}
~YaoRX3(){}

};

/*M_PCL   */
class 	 RX3:public YaoRX3 
{	public: 
	 RX3(){}; 
	 ~RX3 (){}; 
	 void forward (double x0,double x1); 
	 void backward(double x0,double x1);  
};

//////////// Begin of the Yao Class YaoRX32 ////////////
class   	      YaoRX32
{
	 public:
	      double	 Ystate[YNBALLTIME_Tm][YNBS_RX32];
	      double	 Ygrad[YNBALLTIME_Tm][YNBS_RX32];
	      double	 Ydelta[YNBALLTIME_Tm][YNBS_RX32];

//:=========> Constructor - Destructor ============
YaoRX32(){}
~YaoRX32(){}

};

/*M_PCL   */
class 	 RX32:public YaoRX32 
{	public: 
	 RX32(){}; 
	 ~RX32 (){}; 
	 void forward (double x0); 
	 void backward(double x0);  
};

//////////// Begin of the Yao Class YaoQ1QF ////////////
class   	      YaoQ1QF
{
	 public:
	      double	 Ystate[YNBALLTIME_Tm][YNBS_Q1QF];
	      double	 Ygrad[YNBALLTIME_Tm][YNBS_Q1QF];
	      double	 Ydelta[YNBALLTIME_Tm][YNBS_Q1QF];

//:=========> Constructor - Destructor ============
YaoQ1QF(){}
~YaoQ1QF(){}

};

/*M_PCL   */
class 	 Q1QF:public YaoQ1QF 
{	public: 
	 Q1QF(){}; 
	 ~Q1QF (){}; 
	 void forward (double x0,double x1); 
	 void backward(double x0,double x1);  
};

//////////// Begin of the Yao Class YaoQD ////////////
class   	      YaoQD
{
	 public:
	      double	 Ystate[YNBALLTIME_Tm][YNBS_QD];
	      double	 Ygrad[YNBALLTIME_Tm][YNBS_QD];
	      double	 Ydelta[YNBALLTIME_Tm][YNBS_QD];

//:=========> Constructor - Destructor ============
YaoQD(){}
~YaoQD(){}

};

/*M_PCL   */
class 	 QD:public YaoQD 
{	public: 
	 QD(){}; 
	 ~QD (){}; 
	 void forward (double x0); 
	 void backward(double x0);  
};

//////////// Begin of the Yao Class YaoQS ////////////
class   	      YaoQS
{
	 public:
	      double	 Ystate[YNBALLTIME_Tm][YNBS_QS];
	      double	 Ygrad[YNBALLTIME_Tm][YNBS_QS];
	      double	 Ywish[YNBS_QS];
	      double	 Ydelta[YNBALLTIME_Tm][YNBS_QS];

//:=========> Constructor - Destructor ============
YaoQS(){}
~YaoQS(){}

};

/*M_PCL   */
class 	 QS:public YaoQS 
{	public: 
	 QS(){}; 
	 ~QS (){}; 
	 void forward (double x0,double x1); 
	 void backward(double x0,double x1);  
};

//¤ ¤ ¤ ¤ PROTOTYPES of AUTO-FUNCTIONS ¤ ¤ ¤ ¤ ¤ ¤ ¤ ¤ ¤ ¤ ¤
void Yrazgrad_X1(); 
void Ysetstate_X1(); 
void Ysetepsi_X1(); 
void Yadjust_X1(); 
void Y3getstate_X1(float x[]); 
void Y3valstate_X1(); 
void Y3valgrad_X1(float g[]); 
void Y3valxinf_X1(); 
void Y3valxsup_X1(); 
void Y3valdxmin_X1(); 
void Yrazgrad_X2(); 
void Ysetstate_X2(); 
void Ysetepsi_X2(); 
void Yadjust_X2(); 
void Y3getstate_X2(float x[]); 
void Y3valstate_X2(); 
void Y3valgrad_X2(float g[]); 
void Y3valxinf_X2(); 
void Y3valxsup_X2(); 
void Y3valdxmin_X2(); 
void Yrazgrad_X3(); 
void Ysetstate_X3(); 
void Ysetepsi_X3(); 
void Yadjust_X3(); 
void Y3getstate_X3(float x[]); 
void Y3valstate_X3(); 
void Y3valgrad_X3(float g[]); 
void Y3valxinf_X3(); 
void Y3valxsup_X3(); 
void Y3valdxmin_X3(); 
void Yrazgrad_X4(); 
void Ysetstate_X4(); 
void Ysetepsi_X4(); 
void Yadjust_X4(); 
void Y3getstate_X4(float x[]); 
void Y3valstate_X4(); 
void Y3valgrad_X4(float g[]); 
void Y3valxinf_X4(); 
void Y3valxsup_X4(); 
void Y3valdxmin_X4(); 
void Yrazgrad_P(); 
void Ysetstate_P(); 
void Yrazgrad_E(); 
void Ysetstate_E(); 
void Yrazgrad_INTERC(); 
void Ysetstate_INTERC(); 
void Yrazgrad_SX1(); 
void Ysetstate_SX1(); 
void Yrazgrad_PNX1(); 
void Ysetstate_PNX1(); 
void Yrazgrad_ENX1(); 
void Ysetstate_ENX1(); 
void Yrazgrad_tanhPS(); 
void Ysetstate_tanhPS(); 
void Yrazgrad_tanhES(); 
void Ysetstate_tanhES(); 
void Yrazgrad_PS1(); 
void Ysetstate_PS1(); 
void Yrazgrad_PS2(); 
void Ysetstate_PS2(); 
void Yrazgrad_PS3(); 
void Ysetstate_PS3(); 
void Yrazgrad_MS1(); 
void Ysetstate_MS1(); 
void Yrazgrad_MS21(); 
void Ysetstate_MS21(); 
void Yrazgrad_MS23(); 
void Ysetstate_MS23(); 
void Yrazgrad_MS24(); 
void Ysetstate_MS24(); 
void Yrazgrad_MS3(); 
void Ysetstate_MS3(); 
void Yrazgrad_PR(); 
void Ysetstate_PR(); 
void Yrazgrad_Q9(); 
void Ysetstate_Q9(); 
void Yrazgrad_Q1(); 
void Ysetstate_Q1(); 
void Yrazgrad_F(); 
void Ysetstate_F(); 
void Yrazgrad_QR(); 
void Ysetstate_QR(); 
void Yrazgrad_RQ9F(); 
void Ysetstate_RQ9F(); 
void Yrazgrad_R1(); 
void Ysetstate_R1(); 
void Yrazgrad_R2(); 
void Ysetstate_R2(); 
void Yrazgrad_RX3(); 
void Ysetstate_RX3(); 
void Yrazgrad_RX32(); 
void Ysetstate_RX32(); 
void Yrazgrad_Q1QF(); 
void Ysetstate_Q1QF(); 
void Yrazgrad_QD(); 
void Ysetstate_QD(); 
void Yrazgrad_QS(); 
void Ysetstate_QS(); 

/*------------- DUE TO MULTI TRAJECTOIRIES --------------*/
#define YNBTRAJ        2 
int Yforward_traj_Tm(int nbp);
int Ybackward_traj_Tm(int nbp);
int Ylinward_traj_Tm(int nbp);
int Ydfward_traj_Tm(int modop, char *nmmod, int All, int KeKo, int koleft,float pdx, float ptol, int yi, int yj,	int yk);
int Ydftestijkt(int imod);
int Ydftesttt(int itraj);

/*------- GENERATION DU TABLEAU DES TRAJECTOIRES --------*/
struct Yst_traj YTabTraj[2] = {
	{"Tpar", 'M', 0, 0.000000, 1.000000, 0.000000, 0, 1, 1.000000, NULL, NULL, NULL, NULL, 0},
	{"Tm", 'M', 30, 0.000000, 1.000000, 0.000000, 30, 4008, 4008.000000, Yforward_traj_Tm, Ybackward_traj_Tm, Ylinward_traj_Tm, Ydfward_traj_Tm, 1},
};

/*------- GENERATION DU TABLEAU DES ESPACES --------*/
#define YNBSPACE       2 
struct Yst_space YTabSpace[2] = {
	{"Sm", 'M', 1, 0, 0, "Tm"},
	{"Spar", 'M', 1, 0, 0, "Tpar"},
};

/*------ GENERATION DU TABLEAU DES OPERATEURS -------*/
#define YNBOPERA       0 
struct Yst_opera YTabOpera[0] = {
};

/*------- GENERATION D'UN TABLEAU d'ACCES AUX MODULES --------*/
#define YNBMODUL       33 
struct Yst_modul YTabMod[33] = {
	{"X1", *YX1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1.000000e+00, 1.000000e+00, 1.000000e+00, 0, "Spar"},
	{"X2", *YX2, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1.000000e+00, 1.000000e+00, 1.000000e+00, 0, "Spar"},
	{"X3", *YX3, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1.000000e+00, 1.000000e+00, 1.000000e+00, 0, "Spar"},
	{"X4", *YX4, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1.000000e+00, 1.000000e+00, 1.000000e+00, 0, "Spar"},
	{"P", *YP, 1, 1, 0, 0, 0, 1, 4038, 0, 0, 0, 0, 1.000000e+00, 1.000000e+00, 1.000000e+00, 0, "Sm"},
	{"E", *YE, 1, 1, 0, 0, 0, 1, 4038, 0, 0, 0, 0, 1.000000e+00, 1.000000e+00, 1.000000e+00, 0, "Sm"},
	{"INTERC", *YINTERC, 1, 1, 0, 0, 2, 2, 4038, 0, 0, 0, 0, 1.000000e+00, 1.000000e+00, 1.000000e+00, 1, "Sm"},
	{"SX1", *YSX1, 1, 1, 0, 0, 2, 1, 4038, 0, 0, 0, 0, 1.000000e+00, 1.000000e+00, 1.000000e+00, 1, "Sm"},
	{"PNX1", *YPNX1, 1, 1, 0, 0, 2, 1, 4038, 0, 0, 0, 0, 1.000000e+00, 1.000000e+00, 1.000000e+00, 1, "Sm"},
	{"ENX1", *YENX1, 1, 1, 0, 0, 2, 1, 4038, 0, 0, 0, 0, 1.000000e+00, 1.000000e+00, 1.000000e+00, 1, "Sm"},
	{"tanhPS", *YtanhPS, 1, 1, 0, 0, 1, 1, 4038, 0, 0, 0, 0, 1.000000e+00, 1.000000e+00, 1.000000e+00, 1, "Sm"},
	{"tanhES", *YtanhES, 1, 1, 0, 0, 1, 1, 4038, 0, 0, 0, 0, 1.000000e+00, 1.000000e+00, 1.000000e+00, 1, "Sm"},
	{"PS1", *YPS1, 1, 1, 0, 0, 5, 2, 4038, 0, 0, 0, 0, 1.000000e+00, 1.000000e+00, 1.000000e+00, 1, "Sm"},
	{"PS2", *YPS2, 1, 1, 0, 0, 3, 2, 4038, 0, 0, 0, 0, 1.000000e+00, 1.000000e+00, 1.000000e+00, 1, "Sm"},
	{"PS3", *YPS3, 1, 1, 0, 0, 5, 2, 4038, 0, 0, 0, 0, 1.000000e+00, 1.000000e+00, 1.000000e+00, 1, "Sm"},
	{"MS1", *YMS1, 1, 1, 0, 0, 3, 1, 4038, 0, 0, 0, 0, 1.000000e+00, 1.000000e+00, 1.000000e+00, 1, "Sm"},
	{"MS21", *YMS21, 1, 1, 0, 0, 1, 1, 4038, 0, 0, 0, 0, 1.000000e+00, 1.000000e+00, 1.000000e+00, 1, "Sm"},
	{"MS23", *YMS23, 1, 1, 0, 0, 2, 1, 4038, 0, 0, 0, 0, 1.000000e+00, 1.000000e+00, 1.000000e+00, 1, "Sm"},
	{"MS24", *YMS24, 1, 1, 0, 0, 2, 1, 4038, 0, 0, 0, 0, 1.000000e+00, 1.000000e+00, 1.000000e+00, 1, "Sm"},
	{"MS3", *YMS3, 1, 1, 0, 0, 2, 1, 4038, 0, 0, 0, 0, 1.000000e+00, 1.000000e+00, 1.000000e+00, 1, "Sm"},
	{"PR", *YPR, 1, 1, 0, 0, 3, 1, 4038, 0, 0, 0, 0, 1.000000e+00, 1.000000e+00, 1.000000e+00, 1, "Sm"},
	{"Q9", *YQ9, 1, 1, 0, 0, 31, 1, 4038, 0, 0, 0, 0, 1.000000e+00, 1.000000e+00, 1.000000e+00, 1, "Sm"},
	{"Q1", *YQ1, 1, 1, 0, 0, 31, 1, 4038, 0, 0, 0, 0, 1.000000e+00, 1.000000e+00, 1.000000e+00, 1, "Sm"},
	{"F", *YF, 1, 1, 0, 0, 3, 1, 4038, 0, 0, 0, 0, 1.000000e+00, 1.000000e+00, 1.000000e+00, 1, "Sm"},
	{"QR", *YQR, 1, 1, 0, 0, 2, 1, 4038, 0, 0, 0, 0, 1.000000e+00, 1.000000e+00, 1.000000e+00, 1, "Sm"},
	{"RQ9F", *YRQ9F, 1, 1, 0, 0, 3, 1, 4038, 0, 0, 0, 0, 1.000000e+00, 1.000000e+00, 1.000000e+00, 1, "Sm"},
	{"R1", *YR1, 1, 1, 0, 0, 1, 1, 4038, 0, 0, 0, 0, 1.000000e+00, 1.000000e+00, 1.000000e+00, 1, "Sm"},
	{"R2", *YR2, 1, 1, 0, 0, 2, 1, 4038, 0, 0, 0, 0, 1.000000e+00, 1.000000e+00, 1.000000e+00, 1, "Sm"},
	{"RX3", *YRX3, 1, 1, 0, 0, 2, 1, 4038, 0, 0, 0, 0, 1.000000e+00, 1.000000e+00, 1.000000e+00, 1, "Sm"},
	{"RX32", *YRX32, 1, 1, 0, 0, 1, 1, 4038, 0, 0, 0, 0, 1.000000e+00, 1.000000e+00, 1.000000e+00, 1, "Sm"},
	{"Q1QF", *YQ1QF, 1, 1, 0, 0, 2, 1, 4038, 0, 0, 0, 0, 1.000000e+00, 1.000000e+00, 1.000000e+00, 1, "Sm"},
	{"QD", *YQD, 1, 1, 0, 0, 1, 1, 4038, 0, 0, 0, 0, 1.000000e+00, 1.000000e+00, 1.000000e+00, 1, "Sm"},
	{"QS", *YQS, 1, 1, 0, 0, 2, 1, 4038, 1, 0, 0, 0, 1.000000e+00, 1.000000e+00, 1.000000e+00, 1, "Sm"},
};

/*------- GENERATION TABLEAU COUT_MODULES/OPERA --------*/
short   YTabMocop[YNBMODUL][YNBOPERA] = {
	{  },
	{  },
	{  },
	{  },
	{  },
	{  },
	{  },
	{  },
	{  },
	{  },
	{  },
	{  },
	{  },
	{  },
	{  },
	{  },
	{  },
	{  },
	{  },
	{  },
	{  },
	{  },
	{  },
	{  },
	{  },
	{  },
	{  },
	{  },
	{  },
	{  },
	{  },
	{  },
	{  },
};

//----- GENERATION d'UN TABLEAU de DEFINITIONS de VALEURS -----
#define YNBDEFVAL      2 
struct Yst_defval YTabDefval[2] = {
	{"NT", "4008"},
	{"SIZE", "40"},
};

//¤ ¤ ¤ ¤ GENERATION AUTOMATIQUE DES include ¤ ¤ ¤ ¤ ¤ ¤ ¤ ¤ ¤ ¤ ¤
#include "GR4J.h" 

#define  forward  void INTERC::forward 
#define  backward void INTERC::backward
#define  flinward void INTERC::flinward
#define  YS1Y Ystate[YTemps][0] 
#define  YS1  Ystate[YTemps][0] 
#define  YG1  Ygrad[YTemps][0] 
#define  YS2Y Ystate[YTemps][1] 
#define  YS2  Ystate[YTemps][1] 
#define  YG2  Ygrad[YTemps][1] 
#include "INTERC.h" 
#undef   YS1Y  
#undef   YS1   
#undef   YG1   
#undef   YS2Y  
#undef   YS2   
#undef   YG2   
#undef   forward 
#undef   backward
#undef   flinward

#define  forward  void SX1::forward 
#define  backward void SX1::backward
#define  flinward void SX1::flinward
#define  YS1Y Ystate[YTemps][0] 
#define  YS1  Ystate[YTemps][0] 
#define  YG1  Ygrad[YTemps][0] 
#include "SX1.h" 
#undef   YS1Y  
#undef   YS1   
#undef   YG1   
#undef   forward 
#undef   backward
#undef   flinward

#define  forward  void PNX1::forward 
#define  backward void PNX1::backward
#define  flinward void PNX1::flinward
#define  YS1Y Ystate[YTemps][0] 
#define  YS1  Ystate[YTemps][0] 
#define  YG1  Ygrad[YTemps][0] 
#include "PNX1.h" 
#undef   YS1Y  
#undef   YS1   
#undef   YG1   
#undef   forward 
#undef   backward
#undef   flinward

#define  forward  void ENX1::forward 
#define  backward void ENX1::backward
#define  flinward void ENX1::flinward
#define  YS1Y Ystate[YTemps][0] 
#define  YS1  Ystate[YTemps][0] 
#define  YG1  Ygrad[YTemps][0] 
#include "ENX1.h" 
#undef   YS1Y  
#undef   YS1   
#undef   YG1   
#undef   forward 
#undef   backward
#undef   flinward

#define  forward  void tanhPS::forward 
#define  backward void tanhPS::backward
#define  flinward void tanhPS::flinward
#define  YS1Y Ystate[YTemps][0] 
#define  YS1  Ystate[YTemps][0] 
#define  YG1  Ygrad[YTemps][0] 
#include "tanhPS.h" 
#undef   YS1Y  
#undef   YS1   
#undef   YG1   
#undef   forward 
#undef   backward
#undef   flinward

#define  forward  void tanhES::forward 
#define  backward void tanhES::backward
#define  flinward void tanhES::flinward
#define  YS1Y Ystate[YTemps][0] 
#define  YS1  Ystate[YTemps][0] 
#define  YG1  Ygrad[YTemps][0] 
#include "tanhES.h" 
#undef   YS1Y  
#undef   YS1   
#undef   YG1   
#undef   forward 
#undef   backward
#undef   flinward

#define  forward  void PS1::forward 
#define  backward void PS1::backward
#define  flinward void PS1::flinward
#define  YS1Y Ystate[YTemps][0] 
#define  YS1  Ystate[YTemps][0] 
#define  YG1  Ygrad[YTemps][0] 
#define  YS2Y Ystate[YTemps][1] 
#define  YS2  Ystate[YTemps][1] 
#define  YG2  Ygrad[YTemps][1] 
#include "PS1.h" 
#undef   YS1Y  
#undef   YS1   
#undef   YG1   
#undef   YS2Y  
#undef   YS2   
#undef   YG2   
#undef   forward 
#undef   backward
#undef   flinward

#define  forward  void PS2::forward 
#define  backward void PS2::backward
#define  flinward void PS2::flinward
#define  YS1Y Ystate[YTemps][0] 
#define  YS1  Ystate[YTemps][0] 
#define  YG1  Ygrad[YTemps][0] 
#define  YS2Y Ystate[YTemps][1] 
#define  YS2  Ystate[YTemps][1] 
#define  YG2  Ygrad[YTemps][1] 
#include "PS2.h" 
#undef   YS1Y  
#undef   YS1   
#undef   YG1   
#undef   YS2Y  
#undef   YS2   
#undef   YG2   
#undef   forward 
#undef   backward
#undef   flinward

#define  forward  void PS3::forward 
#define  backward void PS3::backward
#define  flinward void PS3::flinward
#define  YS1Y Ystate[YTemps][0] 
#define  YS1  Ystate[YTemps][0] 
#define  YG1  Ygrad[YTemps][0] 
#define  YS2Y Ystate[YTemps][1] 
#define  YS2  Ystate[YTemps][1] 
#define  YG2  Ygrad[YTemps][1] 
#include "PS3.h" 
#undef   YS1Y  
#undef   YS1   
#undef   YG1   
#undef   YS2Y  
#undef   YS2   
#undef   YG2   
#undef   forward 
#undef   backward
#undef   flinward

#define  forward  void MS1::forward 
#define  backward void MS1::backward
#define  flinward void MS1::flinward
#define  YS1Y Ystate[YTemps][0] 
#define  YS1  Ystate[YTemps][0] 
#define  YG1  Ygrad[YTemps][0] 
#include "MS1.h" 
#undef   YS1Y  
#undef   YS1   
#undef   YG1   
#undef   forward 
#undef   backward
#undef   flinward

#define  forward  void MS21::forward 
#define  backward void MS21::backward
#define  flinward void MS21::flinward
#define  YS1Y Ystate[YTemps][0] 
#define  YS1  Ystate[YTemps][0] 
#define  YG1  Ygrad[YTemps][0] 
#include "MS21.h" 
#undef   YS1Y  
#undef   YS1   
#undef   YG1   
#undef   forward 
#undef   backward
#undef   flinward

#define  forward  void MS23::forward 
#define  backward void MS23::backward
#define  flinward void MS23::flinward
#define  YS1Y Ystate[YTemps][0] 
#define  YS1  Ystate[YTemps][0] 
#define  YG1  Ygrad[YTemps][0] 
#include "MS23.h" 
#undef   YS1Y  
#undef   YS1   
#undef   YG1   
#undef   forward 
#undef   backward
#undef   flinward

#define  forward  void MS24::forward 
#define  backward void MS24::backward
#define  flinward void MS24::flinward
#define  YS1Y Ystate[YTemps][0] 
#define  YS1  Ystate[YTemps][0] 
#define  YG1  Ygrad[YTemps][0] 
#include "MS24.h" 
#undef   YS1Y  
#undef   YS1   
#undef   YG1   
#undef   forward 
#undef   backward
#undef   flinward

#define  forward  void MS3::forward 
#define  backward void MS3::backward
#define  flinward void MS3::flinward
#define  YS1Y Ystate[YTemps][0] 
#define  YS1  Ystate[YTemps][0] 
#define  YG1  Ygrad[YTemps][0] 
#include "MS3.h" 
#undef   YS1Y  
#undef   YS1   
#undef   YG1   
#undef   forward 
#undef   backward
#undef   flinward

#define  forward  void PR::forward 
#define  backward void PR::backward
#define  flinward void PR::flinward
#define  YS1Y Ystate[YTemps][0] 
#define  YS1  Ystate[YTemps][0] 
#define  YG1  Ygrad[YTemps][0] 
#include "PR.h" 
#undef   YS1Y  
#undef   YS1   
#undef   YG1   
#undef   forward 
#undef   backward
#undef   flinward

#define  forward  void Q9::forward 
#define  backward void Q9::backward
#define  flinward void Q9::flinward
#define  YS1Y Ystate[YTemps][0] 
#define  YS1  Ystate[YTemps][0] 
#define  YG1  Ygrad[YTemps][0] 
#include "Q9.h" 
#undef   YS1Y  
#undef   YS1   
#undef   YG1   
#undef   forward 
#undef   backward
#undef   flinward

#define  forward  void Q1::forward 
#define  backward void Q1::backward
#define  flinward void Q1::flinward
#define  YS1Y Ystate[YTemps][0] 
#define  YS1  Ystate[YTemps][0] 
#define  YG1  Ygrad[YTemps][0] 
#include "Q1.h" 
#undef   YS1Y  
#undef   YS1   
#undef   YG1   
#undef   forward 
#undef   backward
#undef   flinward

#define  forward  void F::forward 
#define  backward void F::backward
#define  flinward void F::flinward
#define  YS1Y Ystate[YTemps][0] 
#define  YS1  Ystate[YTemps][0] 
#define  YG1  Ygrad[YTemps][0] 
#include "F.h" 
#undef   YS1Y  
#undef   YS1   
#undef   YG1   
#undef   forward 
#undef   backward
#undef   flinward

#define  forward  void QR::forward 
#define  backward void QR::backward
#define  flinward void QR::flinward
#define  YS1Y Ystate[YTemps][0] 
#define  YS1  Ystate[YTemps][0] 
#define  YG1  Ygrad[YTemps][0] 
#include "QR.h" 
#undef   YS1Y  
#undef   YS1   
#undef   YG1   
#undef   forward 
#undef   backward
#undef   flinward

#define  forward  void RQ9F::forward 
#define  backward void RQ9F::backward
#define  flinward void RQ9F::flinward
#define  YS1Y Ystate[YTemps][0] 
#define  YS1  Ystate[YTemps][0] 
#define  YG1  Ygrad[YTemps][0] 
#include "RQ9F.h" 
#undef   YS1Y  
#undef   YS1   
#undef   YG1   
#undef   forward 
#undef   backward
#undef   flinward

#define  forward  void R1::forward 
#define  backward void R1::backward
#define  flinward void R1::flinward
#define  YS1Y Ystate[YTemps][0] 
#define  YS1  Ystate[YTemps][0] 
#define  YG1  Ygrad[YTemps][0] 
#include "R1.h" 
#undef   YS1Y  
#undef   YS1   
#undef   YG1   
#undef   forward 
#undef   backward
#undef   flinward

#define  forward  void R2::forward 
#define  backward void R2::backward
#define  flinward void R2::flinward
#define  YS1Y Ystate[YTemps][0] 
#define  YS1  Ystate[YTemps][0] 
#define  YG1  Ygrad[YTemps][0] 
#include "R2.h" 
#undef   YS1Y  
#undef   YS1   
#undef   YG1   
#undef   forward 
#undef   backward
#undef   flinward

#define  forward  void RX3::forward 
#define  backward void RX3::backward
#define  flinward void RX3::flinward
#define  YS1Y Ystate[YTemps][0] 
#define  YS1  Ystate[YTemps][0] 
#define  YG1  Ygrad[YTemps][0] 
#include "RX3.h" 
#undef   YS1Y  
#undef   YS1   
#undef   YG1   
#undef   forward 
#undef   backward
#undef   flinward

#define  forward  void RX32::forward 
#define  backward void RX32::backward
#define  flinward void RX32::flinward
#define  YS1Y Ystate[YTemps][0] 
#define  YS1  Ystate[YTemps][0] 
#define  YG1  Ygrad[YTemps][0] 
#include "RX32.h" 
#undef   YS1Y  
#undef   YS1   
#undef   YG1   
#undef   forward 
#undef   backward
#undef   flinward

#define  forward  void Q1QF::forward 
#define  backward void Q1QF::backward
#define  flinward void Q1QF::flinward
#define  YS1Y Ystate[YTemps][0] 
#define  YS1  Ystate[YTemps][0] 
#define  YG1  Ygrad[YTemps][0] 
#include "Q1QF.h" 
#undef   YS1Y  
#undef   YS1   
#undef   YG1   
#undef   forward 
#undef   backward
#undef   flinward

#define  forward  void QD::forward 
#define  backward void QD::backward
#define  flinward void QD::flinward
#define  YS1Y Ystate[YTemps][0] 
#define  YS1  Ystate[YTemps][0] 
#define  YG1  Ygrad[YTemps][0] 
#include "QD.h" 
#undef   YS1Y  
#undef   YS1   
#undef   YG1   
#undef   forward 
#undef   backward
#undef   flinward

#define  forward  void QS::forward 
#define  backward void QS::backward
#define  flinward void QS::flinward
#define  YS1Y Ystate[YTemps][0] 
#define  YS1  Ystate[YTemps][0] 
#define  YG1  Ygrad[YTemps][0] 
#include "QS.h" 
#undef   YS1Y  
#undef   YS1   
#undef   YG1   
#undef   forward 
#undef   backward
#undef   flinward

//-------------- end Yao generation -----------------
